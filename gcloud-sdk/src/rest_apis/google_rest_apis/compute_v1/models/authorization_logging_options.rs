use serde::{Deserialize, Serialize}; /*
                                      * Compute Engine API
                                      *
                                      * Creates and runs virtual machines on Google Cloud Platform.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

/// AuthorizationLoggingOptions : This is deprecated and has no effect. Do not use.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AuthorizationLoggingOptions {
    /// This is deprecated and has no effect. Do not use.
    #[serde(rename = "permissionType", skip_serializing_if = "Option::is_none")]
    pub permission_type: Option<PermissionType>,
}

impl AuthorizationLoggingOptions {
    /// This is deprecated and has no effect. Do not use.
    pub fn new() -> AuthorizationLoggingOptions {
        AuthorizationLoggingOptions {
            permission_type: None,
        }
    }
}

/// This is deprecated and has no effect. Do not use.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PermissionType {
    #[serde(rename = "ADMIN_READ")]
    AdminRead,
    #[serde(rename = "ADMIN_WRITE")]
    AdminWrite,
    #[serde(rename = "DATA_READ")]
    DataRead,
    #[serde(rename = "DATA_WRITE")]
    DataWrite,
    #[serde(rename = "PERMISSION_TYPE_UNSPECIFIED")]
    PermissionTypeUnspecified,
}

impl Default for PermissionType {
    fn default() -> PermissionType {
        Self::AdminRead
    }
}
