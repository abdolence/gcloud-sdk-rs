use serde::{Deserialize, Serialize}; /*
                                      * BigQuery API
                                      *
                                      * A data platform for customers to create, manage, share and query data.
                                      *
                                      * The version of the OpenAPI document: v2
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct QueryParameterValue {
    /// [Optional] The array values, if this is an array type.
    #[serde(rename = "arrayValues", skip_serializing_if = "Option::is_none")]
    pub array_values:
        Option<Vec<crate::google_rest_apis::bigquery_v2::models::QueryParameterValue>>,
    /// [Optional] The struct field values, in order of the struct type's declaration.
    #[serde(rename = "structValues", skip_serializing_if = "Option::is_none")]
    pub struct_values: Option<
        ::std::collections::HashMap<
            String,
            crate::google_rest_apis::bigquery_v2::models::QueryParameterValue,
        >,
    >,
    /// [Optional] The value of this value, if a simple scalar type.
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
}

impl QueryParameterValue {
    pub fn new() -> QueryParameterValue {
        QueryParameterValue {
            array_values: None,
            struct_values: None,
            value: None,
        }
    }
}
