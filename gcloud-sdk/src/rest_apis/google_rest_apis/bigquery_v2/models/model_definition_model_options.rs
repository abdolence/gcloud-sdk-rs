use serde::{Deserialize, Serialize}; /*
                                      * BigQuery API
                                      *
                                      * A data platform for customers to create, manage, share and query data.
                                      *
                                      * The version of the OpenAPI document: v2
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

/// ModelDefinitionModelOptions : [Output-only, Beta] Model options used for the first training run. These options are immutable for subsequent training runs. Default values are used for any options not specified in the input query.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ModelDefinitionModelOptions {
    #[serde(rename = "labels", skip_serializing_if = "Option::is_none")]
    pub labels: Option<Vec<String>>,
    #[serde(rename = "lossType", skip_serializing_if = "Option::is_none")]
    pub loss_type: Option<String>,
    #[serde(rename = "modelType", skip_serializing_if = "Option::is_none")]
    pub model_type: Option<String>,
}

impl ModelDefinitionModelOptions {
    /// [Output-only, Beta] Model options used for the first training run. These options are immutable for subsequent training runs. Default values are used for any options not specified in the input query.
    pub fn new() -> ModelDefinitionModelOptions {
        ModelDefinitionModelOptions {
            labels: None,
            loss_type: None,
            model_type: None,
        }
    }
}
