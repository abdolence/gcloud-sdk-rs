use serde::{Deserialize, Serialize}; /*
                                      * Google Cloud Managed Lustre API
                                      *
                                      * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::lustre_v1::models;

/// ListInstancesResponse : Message for response to listing Instances
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ListInstancesResponse {
    /// Response from ListInstances.
    #[serde(rename = "instances", skip_serializing_if = "Option::is_none")]
    pub instances: Option<Vec<models::Instance>>,
    /// A token identifying a page of results the server should return.
    #[serde(rename = "nextPageToken", skip_serializing_if = "Option::is_none")]
    pub next_page_token: Option<String>,
    /// Unordered list. Locations that could not be reached.
    #[serde(rename = "unreachable", skip_serializing_if = "Option::is_none")]
    pub unreachable: Option<Vec<String>>,
}

impl ListInstancesResponse {
    /// Message for response to listing Instances
    pub fn new() -> ListInstancesResponse {
        ListInstancesResponse {
            instances: None,
            next_page_token: None,
            unreachable: None,
        }
    }
}
