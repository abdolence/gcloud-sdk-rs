/*
 * Google Identity Toolkit API
 *
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::identitytoolkit_v3::models;
use serde::{Deserialize, Serialize};

/// IdentitytoolkitRelyingpartyVerifyCustomTokenRequest : Request to verify a custom token
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IdentitytoolkitRelyingpartyVerifyCustomTokenRequest {
    /// GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
    #[serde(
        rename = "delegatedProjectNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub delegated_project_number: Option<String>,
    /// Instance id token of the app.
    #[serde(rename = "instanceId", skip_serializing_if = "Option::is_none")]
    pub instance_id: Option<String>,
    /// Whether return sts id token and refresh token instead of gitkit token.
    #[serde(rename = "returnSecureToken", skip_serializing_if = "Option::is_none")]
    pub return_secure_token: Option<bool>,
    /// The custom token to verify
    #[serde(rename = "token", skip_serializing_if = "Option::is_none")]
    pub token: Option<String>,
}

impl IdentitytoolkitRelyingpartyVerifyCustomTokenRequest {
    /// Request to verify a custom token
    pub fn new() -> IdentitytoolkitRelyingpartyVerifyCustomTokenRequest {
        IdentitytoolkitRelyingpartyVerifyCustomTokenRequest {
            delegated_project_number: None,
            instance_id: None,
            return_secure_token: None,
            token: None,
        }
    }
}
