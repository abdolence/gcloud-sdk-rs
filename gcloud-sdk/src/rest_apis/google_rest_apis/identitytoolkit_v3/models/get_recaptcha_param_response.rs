/*
 * Google Identity Toolkit API
 *
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::identitytoolkit_v3::models;
use serde::{Deserialize, Serialize};

/// GetRecaptchaParamResponse : Response of getting recaptcha param.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetRecaptchaParamResponse {
    /// The fixed string \"identitytoolkit#GetRecaptchaParamResponse\".
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    /// Site key registered at recaptcha.
    #[serde(rename = "recaptchaSiteKey", skip_serializing_if = "Option::is_none")]
    pub recaptcha_site_key: Option<String>,
    /// The stoken field for the recaptcha widget, used to request captcha challenge.
    #[serde(rename = "recaptchaStoken", skip_serializing_if = "Option::is_none")]
    pub recaptcha_stoken: Option<String>,
}

impl GetRecaptchaParamResponse {
    /// Response of getting recaptcha param.
    pub fn new() -> GetRecaptchaParamResponse {
        GetRecaptchaParamResponse {
            kind: None,
            recaptcha_site_key: None,
            recaptcha_stoken: None,
        }
    }
}
