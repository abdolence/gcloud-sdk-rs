/*
 * Google Identity Toolkit API
 *
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::identitytoolkit_v3::models;
use serde::{Deserialize, Serialize};

/// ResetPasswordResponse : Response of resetting the password.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ResetPasswordResponse {
    /// The user's email. If the out-of-band code is for email recovery, the user's original email.
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// The fixed string \"identitytoolkit#ResetPasswordResponse\".
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    /// If the out-of-band code is for email recovery, the user's new email.
    #[serde(rename = "newEmail", skip_serializing_if = "Option::is_none")]
    pub new_email: Option<String>,
    /// The request type.
    #[serde(rename = "requestType", skip_serializing_if = "Option::is_none")]
    pub request_type: Option<String>,
}

impl ResetPasswordResponse {
    /// Response of resetting the password.
    pub fn new() -> ResetPasswordResponse {
        ResetPasswordResponse {
            email: None,
            kind: None,
            new_email: None,
            request_type: None,
        }
    }
}
