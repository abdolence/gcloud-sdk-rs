/*
 * Google Identity Toolkit API
 *
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::identitytoolkit_v3::models;
use serde::{Deserialize, Serialize};

use serde_with::serde_as;

/// UserInfo : Template for an individual account info.
#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserInfo {
    /// User creation timestamp.
    #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// The custom attributes to be set in the user's id token.
    #[serde(rename = "customAttributes", skip_serializing_if = "Option::is_none")]
    pub custom_attributes: Option<String>,
    /// Whether the user is authenticated by the developer.
    #[serde(rename = "customAuth", skip_serializing_if = "Option::is_none")]
    pub custom_auth: Option<bool>,
    /// Whether the user is disabled.
    #[serde(rename = "disabled", skip_serializing_if = "Option::is_none")]
    pub disabled: Option<bool>,
    /// The name of the user.
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    /// The email of the user.
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// Whether the email has been verified.
    #[serde(rename = "emailVerified", skip_serializing_if = "Option::is_none")]
    pub email_verified: Option<bool>,
    /// last login timestamp.
    #[serde(rename = "lastLoginAt", skip_serializing_if = "Option::is_none")]
    pub last_login_at: Option<String>,
    /// The local ID of the user.
    #[serde(rename = "localId", skip_serializing_if = "Option::is_none")]
    pub local_id: Option<String>,
    /// The user's hashed password.
    #[serde_as(as = "Option<serde_with::base64::Base64>")]
    #[serde(rename = "passwordHash", skip_serializing_if = "Option::is_none")]
    pub password_hash: Option<Vec<u8>>,
    /// The timestamp when the password was last updated.
    #[serde(rename = "passwordUpdatedAt", skip_serializing_if = "Option::is_none")]
    pub password_updated_at: Option<f64>,
    /// User's phone number.
    #[serde(rename = "phoneNumber", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<String>,
    /// The URL of the user profile photo.
    #[serde(rename = "photoUrl", skip_serializing_if = "Option::is_none")]
    pub photo_url: Option<String>,
    /// The IDP of the user.
    #[serde(rename = "providerUserInfo", skip_serializing_if = "Option::is_none")]
    pub provider_user_info: Option<Vec<models::UserInfoProviderUserInfoInner>>,
    /// The user's plain text password.
    #[serde(rename = "rawPassword", skip_serializing_if = "Option::is_none")]
    pub raw_password: Option<String>,
    /// The user's password salt.
    #[serde_as(as = "Option<serde_with::base64::Base64>")]
    #[serde(rename = "salt", skip_serializing_if = "Option::is_none")]
    pub salt: Option<Vec<u8>>,
    /// User's screen name at Twitter or login name at Github.
    #[serde(rename = "screenName", skip_serializing_if = "Option::is_none")]
    pub screen_name: Option<String>,
    /// Timestamp in seconds for valid login token.
    #[serde(rename = "validSince", skip_serializing_if = "Option::is_none")]
    pub valid_since: Option<String>,
    /// Version of the user's password.
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<i32>,
}

impl UserInfo {
    /// Template for an individual account info.
    pub fn new() -> UserInfo {
        UserInfo {
            created_at: None,
            custom_attributes: None,
            custom_auth: None,
            disabled: None,
            display_name: None,
            email: None,
            email_verified: None,
            last_login_at: None,
            local_id: None,
            password_hash: None,
            password_updated_at: None,
            phone_number: None,
            photo_url: None,
            provider_user_info: None,
            raw_password: None,
            salt: None,
            screen_name: None,
            valid_since: None,
            version: None,
        }
    }
}
