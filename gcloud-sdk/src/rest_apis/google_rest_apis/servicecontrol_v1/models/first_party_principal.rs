use serde::{Deserialize, Serialize}; /*
                                      * Service Control API
                                      *
                                      * Provides admission control and telemetry reporting for services integrated with Service Infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

/// FirstPartyPrincipal : First party identity principal.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FirstPartyPrincipal {
    /// The email address of a Google account. .
    #[serde(rename = "principalEmail", skip_serializing_if = "Option::is_none")]
    pub principal_email: Option<String>,
    /// Metadata about the service that uses the service account. .
    #[serde(rename = "serviceMetadata", skip_serializing_if = "Option::is_none")]
    pub service_metadata: Option<::std::collections::HashMap<String, serde_json::Value>>,
}

impl FirstPartyPrincipal {
    /// First party identity principal.
    pub fn new() -> FirstPartyPrincipal {
        FirstPartyPrincipal {
            principal_email: None,
            service_metadata: None,
        }
    }
}
