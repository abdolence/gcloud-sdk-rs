use serde::{Deserialize, Serialize}; /*
                                      * Service Control API
                                      *
                                      * Provides admission control and telemetry reporting for services integrated with Service Infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::servicecontrol_v1::models;

/// MetricValue : Represents a single metric value.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MetricValue {
    /// A boolean value.
    #[serde(rename = "boolValue", skip_serializing_if = "Option::is_none")]
    pub bool_value: Option<bool>,
    #[serde(rename = "distributionValue", skip_serializing_if = "Option::is_none")]
    pub distribution_value: Option<Box<models::Distribution>>,
    /// A double precision floating point value.
    #[serde(rename = "doubleValue", skip_serializing_if = "Option::is_none")]
    pub double_value: Option<f64>,
    /// The end of the time period over which this metric value's measurement applies. If not specified, google.api.servicecontrol.v1.Operation.end_time will be used.
    #[serde(rename = "endTime", skip_serializing_if = "Option::is_none")]
    pub end_time: Option<String>,
    /// A signed 64-bit integer value.
    #[serde(rename = "int64Value", skip_serializing_if = "Option::is_none")]
    pub int64_value: Option<String>,
    /// The labels describing the metric value. See comments on google.api.servicecontrol.v1.Operation.labels for the overriding relationship. Note that this map must not contain monitored resource labels.
    #[serde(rename = "labels", skip_serializing_if = "Option::is_none")]
    pub labels: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "moneyValue", skip_serializing_if = "Option::is_none")]
    pub money_value: Option<Box<models::Money>>,
    /// The start of the time period over which this metric value's measurement applies. The time period has different semantics for different metric types (cumulative, delta, and gauge). See the metric definition documentation in the service configuration for details. If not specified, google.api.servicecontrol.v1.Operation.start_time will be used.
    #[serde(rename = "startTime", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<String>,
    /// A text string value.
    #[serde(rename = "stringValue", skip_serializing_if = "Option::is_none")]
    pub string_value: Option<String>,
}

impl MetricValue {
    /// Represents a single metric value.
    pub fn new() -> MetricValue {
        MetricValue {
            bool_value: None,
            distribution_value: None,
            double_value: None,
            end_time: None,
            int64_value: None,
            labels: None,
            money_value: None,
            start_time: None,
            string_value: None,
        }
    }
}
