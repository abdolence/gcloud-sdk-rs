use serde::{Deserialize, Serialize}; /*
                                      * Service Control API
                                      *
                                      * Provides admission control and telemetry reporting for services integrated with Service Infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

/// ResourceInfo : Describes a resource associated with this operation.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ResourceInfo {
    /// The resource permission required for this request.
    #[serde(rename = "permission", skip_serializing_if = "Option::is_none")]
    pub permission: Option<String>,
    /// The identifier of the parent of this resource instance. Must be in one of the following formats: - `projects/` - `folders/` - `organizations/`
    #[serde(rename = "resourceContainer", skip_serializing_if = "Option::is_none")]
    pub resource_container: Option<String>,
    /// The location of the resource. If not empty, the resource will be checked against location policy. The value must be a valid zone, region or multiregion. For example: \"europe-west4\" or \"northamerica-northeast1-a\"
    #[serde(rename = "resourceLocation", skip_serializing_if = "Option::is_none")]
    pub resource_location: Option<String>,
    /// Name of the resource. This is used for auditing purposes.
    #[serde(rename = "resourceName", skip_serializing_if = "Option::is_none")]
    pub resource_name: Option<String>,
}

impl ResourceInfo {
    /// Describes a resource associated with this operation.
    pub fn new() -> ResourceInfo {
        ResourceInfo {
            permission: None,
            resource_container: None,
            resource_location: None,
            resource_name: None,
        }
    }
}
