use serde::{Deserialize, Serialize}; /*
                                      * Cloud SQL Admin API
                                      *
                                      * API for Cloud SQL database instance management
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

/// SqlInstancesVerifyExternalSyncSettingsResponse : Instance verify external sync settings response.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SqlInstancesVerifyExternalSyncSettingsResponse {
    /// List of migration violations.
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors:
        Option<Vec<crate::google_rest_apis::sqladmin_v1::models::SqlExternalSyncSettingError>>,
    /// This is always `sql#migrationSettingErrorList`.
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    /// List of migration warnings.
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings:
        Option<Vec<crate::google_rest_apis::sqladmin_v1::models::SqlExternalSyncSettingError>>,
}

impl SqlInstancesVerifyExternalSyncSettingsResponse {
    /// Instance verify external sync settings response.
    pub fn new() -> SqlInstancesVerifyExternalSyncSettingsResponse {
        SqlInstancesVerifyExternalSyncSettingsResponse {
            errors: None,
            kind: None,
            warnings: None,
        }
    }
}
