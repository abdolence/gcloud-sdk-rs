use serde::{Deserialize, Serialize}; /*
                                      * Cloud SQL Admin API
                                      *
                                      * API for Cloud SQL database instance management
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

/// ImportContextBakImportOptions : Import parameters specific to SQL Server .BAK files

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ImportContextBakImportOptions {
    #[serde(rename = "encryptionOptions", skip_serializing_if = "Option::is_none")]
    pub encryption_options: Option<Box<crate::google_rest_apis::sqladmin_v1::models::ImportContextBakImportOptionsEncryptionOptions>>,
    /// Whether or not the backup set being restored is striped. Applies only to Cloud SQL for SQL Server.
    #[serde(rename = "striped", skip_serializing_if = "Option::is_none")]
    pub striped: Option<bool>,
}

impl ImportContextBakImportOptions {
    /// Import parameters specific to SQL Server .BAK files
    pub fn new() -> ImportContextBakImportOptions {
        ImportContextBakImportOptions {
            encryption_options: None,
            striped: None,
        }
    }
}
