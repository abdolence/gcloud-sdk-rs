use serde::{Deserialize, Serialize}; /*
                                      * Cloud SQL Admin API
                                      *
                                      * API for Cloud SQL database instance management
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

/// DiskEncryptionConfiguration : Disk encryption configuration for an instance.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DiskEncryptionConfiguration {
    /// This is always `sql#diskEncryptionConfiguration`.
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    /// Resource name of KMS key for disk encryption
    #[serde(rename = "kmsKeyName", skip_serializing_if = "Option::is_none")]
    pub kms_key_name: Option<String>,
}

impl DiskEncryptionConfiguration {
    /// Disk encryption configuration for an instance.
    pub fn new() -> DiskEncryptionConfiguration {
        DiskEncryptionConfiguration {
            kind: None,
            kms_key_name: None,
        }
    }
}
