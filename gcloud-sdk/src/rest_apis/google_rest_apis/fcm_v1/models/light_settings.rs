use serde::{Deserialize, Serialize}; /*
                                      * Firebase Cloud Messaging API
                                      *
                                      * FCM send API that provides a cross-platform messaging solution to reliably deliver messages at no cost.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::fcm_v1::models;

/// LightSettings : Settings to control notification LED.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LightSettings {
    #[serde(rename = "color", skip_serializing_if = "Option::is_none")]
    pub color: Option<Box<models::Color>>,
    /// Required. Along with `light_on_duration `, define the blink rate of LED flashes. Resolution defined by [proto.Duration](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration)
    #[serde(rename = "lightOffDuration", skip_serializing_if = "Option::is_none")]
    pub light_off_duration: Option<String>,
    /// Required. Along with `light_off_duration`, define the blink rate of LED flashes. Resolution defined by [proto.Duration](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration)
    #[serde(rename = "lightOnDuration", skip_serializing_if = "Option::is_none")]
    pub light_on_duration: Option<String>,
}

impl LightSettings {
    /// Settings to control notification LED.
    pub fn new() -> LightSettings {
        LightSettings {
            color: None,
            light_off_duration: None,
            light_on_duration: None,
        }
    }
}
