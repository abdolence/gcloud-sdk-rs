use serde::{Deserialize, Serialize}; /*
                                      * Artifact Registry API
                                      *
                                      * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::artifactregistry_v1::models;

/// MavenRepositoryConfig : MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of the maven format type.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MavenRepositoryConfig {
    /// The repository with this flag will allow publishing the same snapshot versions.
    #[serde(
        rename = "allowSnapshotOverwrites",
        skip_serializing_if = "Option::is_none"
    )]
    pub allow_snapshot_overwrites: Option<bool>,
    /// Version policy defines the versions that the registry will accept.
    #[serde(rename = "versionPolicy", skip_serializing_if = "Option::is_none")]
    pub version_policy: Option<VersionPolicy>,
}

impl MavenRepositoryConfig {
    /// MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of the maven format type.
    pub fn new() -> MavenRepositoryConfig {
        MavenRepositoryConfig {
            allow_snapshot_overwrites: None,
            version_policy: None,
        }
    }
}
/// Version policy defines the versions that the registry will accept.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum VersionPolicy {
    #[serde(rename = "VERSION_POLICY_UNSPECIFIED")]
    VersionPolicyUnspecified,
    #[serde(rename = "RELEASE")]
    Release,
    #[serde(rename = "SNAPSHOT")]
    Snapshot,
}

impl Default for VersionPolicy {
    fn default() -> VersionPolicy {
        Self::VersionPolicyUnspecified
    }
}
