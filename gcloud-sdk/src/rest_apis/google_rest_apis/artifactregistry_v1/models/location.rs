use serde::{Deserialize, Serialize}; /*
                                      * Artifact Registry API
                                      *
                                      * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::artifactregistry_v1::models;

/// Location : A resource that represents a Google Cloud location.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Location {
    /// The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    /// Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}
    #[serde(rename = "labels", skip_serializing_if = "Option::is_none")]
    pub labels: Option<std::collections::HashMap<String, String>>,
    /// The canonical id for this location. For example: `\"us-east1\"`.
    #[serde(rename = "locationId", skip_serializing_if = "Option::is_none")]
    pub location_id: Option<String>,
    /// Service-specific metadata. For example the available capacity at the given location.
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<std::collections::HashMap<String, serde_json::Value>>,
    /// Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl Location {
    /// A resource that represents a Google Cloud location.
    pub fn new() -> Location {
        Location {
            display_name: None,
            labels: None,
            location_id: None,
            metadata: None,
            name: None,
        }
    }
}
