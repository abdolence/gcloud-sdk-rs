use serde::{Deserialize, Serialize}; /*
                                      * Artifact Registry API
                                      *
                                      * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::artifactregistry_v1::models;

/// GoogetArtifact : A detailed representation of a GooGet artifact.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GoogetArtifact {
    /// Output only. Operating system architecture of the artifact.
    #[serde(rename = "architecture", skip_serializing_if = "Option::is_none")]
    pub architecture: Option<String>,
    /// Output only. The Artifact Registry resource name of the artifact.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Output only. The GooGet package name of the artifact.
    #[serde(rename = "packageName", skip_serializing_if = "Option::is_none")]
    pub package_name: Option<String>,
}

impl GoogetArtifact {
    /// A detailed representation of a GooGet artifact.
    pub fn new() -> GoogetArtifact {
        GoogetArtifact {
            architecture: None,
            name: None,
            package_name: None,
        }
    }
}
