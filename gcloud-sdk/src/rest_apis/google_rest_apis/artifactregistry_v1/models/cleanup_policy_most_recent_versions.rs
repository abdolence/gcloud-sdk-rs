use serde::{Deserialize, Serialize}; /*
                                      * Artifact Registry API
                                      *
                                      * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::artifactregistry_v1::models;

/// CleanupPolicyMostRecentVersions : CleanupPolicyMostRecentVersions is an alternate condition of a CleanupPolicy for retaining a minimum number of versions.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CleanupPolicyMostRecentVersions {
    /// Minimum number of versions to keep.
    #[serde(rename = "keepCount", skip_serializing_if = "Option::is_none")]
    pub keep_count: Option<i32>,
    /// List of package name prefixes that will apply this rule.
    #[serde(
        rename = "packageNamePrefixes",
        skip_serializing_if = "Option::is_none"
    )]
    pub package_name_prefixes: Option<Vec<String>>,
}

impl CleanupPolicyMostRecentVersions {
    /// CleanupPolicyMostRecentVersions is an alternate condition of a CleanupPolicy for retaining a minimum number of versions.
    pub fn new() -> CleanupPolicyMostRecentVersions {
        CleanupPolicyMostRecentVersions {
            keep_count: None,
            package_name_prefixes: None,
        }
    }
}
