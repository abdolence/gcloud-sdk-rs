use serde::{Deserialize, Serialize}; /*
                                      * Artifact Registry API
                                      *
                                      * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::artifactregistry_v1::models;

/// UploadKfpArtifactRequest : The request to upload an artifact.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UploadKfpArtifactRequest {
    /// Tags to be created with the version.
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    /// Description of the package version.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
}

impl UploadKfpArtifactRequest {
    /// The request to upload an artifact.
    pub fn new() -> UploadKfpArtifactRequest {
        UploadKfpArtifactRequest {
            tags: None,
            description: None,
        }
    }
}
