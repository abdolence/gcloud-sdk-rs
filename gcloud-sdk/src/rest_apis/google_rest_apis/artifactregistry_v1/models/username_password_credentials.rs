use serde::{Deserialize, Serialize}; /*
                                      * Artifact Registry API
                                      *
                                      * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::artifactregistry_v1::models;

/// UsernamePasswordCredentials : Username and password credentials.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UsernamePasswordCredentials {
    /// The Secret Manager key version that holds the password to access the remote repository. Must be in the format of `projects/{project}/secrets/{secret}/versions/{version}`.
    #[serde(
        rename = "passwordSecretVersion",
        skip_serializing_if = "Option::is_none"
    )]
    pub password_secret_version: Option<String>,
    /// The username to access the remote repository.
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
}

impl UsernamePasswordCredentials {
    /// Username and password credentials.
    pub fn new() -> UsernamePasswordCredentials {
        UsernamePasswordCredentials {
            password_secret_version: None,
            username: None,
        }
    }
}
