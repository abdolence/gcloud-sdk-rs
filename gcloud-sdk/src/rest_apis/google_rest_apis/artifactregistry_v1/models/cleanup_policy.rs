use serde::{Deserialize, Serialize}; /*
                                      * Artifact Registry API
                                      *
                                      * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::artifactregistry_v1::models;

/// CleanupPolicy : Artifact policy configuration for repository cleanup policies.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CleanupPolicy {
    /// Policy action.
    #[serde(rename = "action", skip_serializing_if = "Option::is_none")]
    pub action: Option<Action>,
    /// Policy condition for matching versions.
    #[serde(rename = "condition", skip_serializing_if = "Option::is_none")]
    pub condition: Option<Box<models::CleanupPolicyCondition>>,
    /// The user-provided ID of the cleanup policy.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Policy condition for retaining a minimum number of versions. May only be specified with a Keep action.
    #[serde(rename = "mostRecentVersions", skip_serializing_if = "Option::is_none")]
    pub most_recent_versions: Option<Box<models::CleanupPolicyMostRecentVersions>>,
}

impl CleanupPolicy {
    /// Artifact policy configuration for repository cleanup policies.
    pub fn new() -> CleanupPolicy {
        CleanupPolicy {
            action: None,
            condition: None,
            id: None,
            most_recent_versions: None,
        }
    }
}
/// Policy action.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Action {
    #[serde(rename = "ACTION_UNSPECIFIED")]
    ActionUnspecified,
    #[serde(rename = "DELETE")]
    Delete,
    #[serde(rename = "KEEP")]
    Keep,
}

impl Default for Action {
    fn default() -> Action {
        Self::ActionUnspecified
    }
}
