use serde::{Deserialize, Serialize}; /*
                                      * Artifact Registry API
                                      *
                                      * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::artifactregistry_v1::models;

/// ImportAptArtifactsResponse : The response message from importing APT artifacts.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ImportAptArtifactsResponse {
    /// The Apt artifacts imported.
    #[serde(rename = "aptArtifacts", skip_serializing_if = "Option::is_none")]
    pub apt_artifacts: Option<Vec<models::AptArtifact>>,
    /// Detailed error info for packages that were not imported.
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Vec<models::ImportAptArtifactsErrorInfo>>,
}

impl ImportAptArtifactsResponse {
    /// The response message from importing APT artifacts.
    pub fn new() -> ImportAptArtifactsResponse {
        ImportAptArtifactsResponse {
            apt_artifacts: None,
            errors: None,
        }
    }
}
