use serde::{Deserialize, Serialize}; /*
                                      * Artifact Registry API
                                      *
                                      * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::artifactregistry_v1::models;

/// MavenArtifact : MavenArtifact represents a maven artifact.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MavenArtifact {
    /// Artifact ID for the artifact.
    #[serde(rename = "artifactId", skip_serializing_if = "Option::is_none")]
    pub artifact_id: Option<String>,
    /// Output only. Time the artifact was created.
    #[serde(rename = "createTime", skip_serializing_if = "Option::is_none")]
    pub create_time: Option<String>,
    /// Group ID for the artifact. Example: com.google.guava
    #[serde(rename = "groupId", skip_serializing_if = "Option::is_none")]
    pub group_id: Option<String>,
    /// Required. registry_location, project_id, repository_name and maven_artifact forms a unique artifact For example, \"projects/test-project/locations/us-west4/repositories/test-repo/mavenArtifacts/ com.google.guava:guava:31.0-jre\", where \"us-west4\" is the registry_location, \"test-project\" is the project_id, \"test-repo\" is the repository_name and \"com.google.guava:guava:31.0-jre\" is the maven artifact.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Required. URL to access the pom file of the artifact. Example: us-west4-maven.pkg.dev/test-project/test-repo/com/google/guava/guava/31.0/guava-31.0.pom
    #[serde(rename = "pomUri", skip_serializing_if = "Option::is_none")]
    pub pom_uri: Option<String>,
    /// Output only. Time the artifact was updated.
    #[serde(rename = "updateTime", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<String>,
    /// Version of this artifact.
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
}

impl MavenArtifact {
    /// MavenArtifact represents a maven artifact.
    pub fn new() -> MavenArtifact {
        MavenArtifact {
            artifact_id: None,
            create_time: None,
            group_id: None,
            name: None,
            pom_uri: None,
            update_time: None,
            version: None,
        }
    }
}
