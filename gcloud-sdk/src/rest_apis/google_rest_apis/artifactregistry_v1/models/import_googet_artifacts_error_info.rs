use serde::{Deserialize, Serialize}; /*
                                      * Artifact Registry API
                                      *
                                      * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::artifactregistry_v1::models;

/// ImportGoogetArtifactsErrorInfo : Error information explaining why a package was not imported.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ImportGoogetArtifactsErrorInfo {
    /// The detailed error status.
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<Box<models::Status>>,
    /// Google Cloud Storage location requested.
    #[serde(rename = "gcsSource", skip_serializing_if = "Option::is_none")]
    pub gcs_source: Option<Box<models::ImportGoogetArtifactsGcsSource>>,
}

impl ImportGoogetArtifactsErrorInfo {
    /// Error information explaining why a package was not imported.
    pub fn new() -> ImportGoogetArtifactsErrorInfo {
        ImportGoogetArtifactsErrorInfo {
            error: None,
            gcs_source: None,
        }
    }
}
