use serde::{Deserialize, Serialize}; /*
                                      * Artifact Registry API
                                      *
                                      * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::artifactregistry_v1::models;

/// VirtualRepositoryConfig : Virtual repository configuration.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VirtualRepositoryConfig {
    /// Policies that configure the upstream artifacts distributed by the Virtual Repository. Upstream policies cannot be set on a standard repository.
    #[serde(rename = "upstreamPolicies", skip_serializing_if = "Option::is_none")]
    pub upstream_policies: Option<Vec<models::UpstreamPolicy>>,
}

impl VirtualRepositoryConfig {
    /// Virtual repository configuration.
    pub fn new() -> VirtualRepositoryConfig {
        VirtualRepositoryConfig {
            upstream_policies: None,
        }
    }
}
