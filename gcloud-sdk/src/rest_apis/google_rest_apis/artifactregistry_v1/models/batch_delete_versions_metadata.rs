use serde::{Deserialize, Serialize}; /*
                                      * Artifact Registry API
                                      *
                                      * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::artifactregistry_v1::models;

/// BatchDeleteVersionsMetadata : The metadata of an LRO from deleting multiple versions.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BatchDeleteVersionsMetadata {
    /// The versions the operation failed to delete.
    #[serde(rename = "failedVersions", skip_serializing_if = "Option::is_none")]
    pub failed_versions: Option<Vec<String>>,
}

impl BatchDeleteVersionsMetadata {
    /// The metadata of an LRO from deleting multiple versions.
    pub fn new() -> BatchDeleteVersionsMetadata {
        BatchDeleteVersionsMetadata {
            failed_versions: None,
        }
    }
}
