use serde::{Deserialize, Serialize}; /*
                                      * Artifact Registry API
                                      *
                                      * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::artifactregistry_v1::models;

/// ImportYumArtifactsGcsSource : Google Cloud Storage location where the artifacts currently reside.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ImportYumArtifactsGcsSource {
    /// Cloud Storage paths URI (e.g., gs://my_bucket//my_object).
    #[serde(rename = "uris", skip_serializing_if = "Option::is_none")]
    pub uris: Option<Vec<String>>,
    /// Supports URI wildcards for matching multiple objects from a single URI.
    #[serde(rename = "useWildcards", skip_serializing_if = "Option::is_none")]
    pub use_wildcards: Option<bool>,
}

impl ImportYumArtifactsGcsSource {
    /// Google Cloud Storage location where the artifacts currently reside.
    pub fn new() -> ImportYumArtifactsGcsSource {
        ImportYumArtifactsGcsSource {
            uris: None,
            use_wildcards: None,
        }
    }
}
