use serde::{Deserialize, Serialize}; /*
                                      * Artifact Registry API
                                      *
                                      * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

use crate::google_rest_apis::artifactregistry_v1::models;

/// ImportGoogetArtifactsResponse : The response message from importing artifacts.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ImportGoogetArtifactsResponse {
    /// Detailed error info for packages that were not imported.
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Vec<models::ImportGoogetArtifactsErrorInfo>>,
    /// The GooGet artifacts updated.
    #[serde(rename = "googetArtifacts", skip_serializing_if = "Option::is_none")]
    pub googet_artifacts: Option<Vec<models::GoogetArtifact>>,
}

impl ImportGoogetArtifactsResponse {
    /// The response message from importing artifacts.
    pub fn new() -> ImportGoogetArtifactsResponse {
        ImportGoogetArtifactsResponse {
            errors: None,
            googet_artifacts: None,
        }
    }
}
