openapi: 3.0.0
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: ''
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Google Cloud Managed Lustre API
  version: v1
servers:
  - url: 'https://lustre.googleapis.com/'
paths:
  '/v1/projects/{project}/locations/{location}/instances/{instance_name}':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    delete:
      parameters:
        - description: Required. Project value
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Required. Location value
          in: path
          name: location
          required: true
          schema:
            type: string
        - description: Required. Instance Name value
          in: path
          name: instance_name
          required: true
          schema:
            type: string
        - description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: Deletes a single instance.
      operationId: lustre.projects.locations.instances.delete
    get:
      parameters:
        - description: Required. Project value
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Required. Location value
          in: path
          name: location
          required: true
          schema:
            type: string
        - description: Required. Instance Name value
          in: path
          name: instance_name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Instance'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: Gets details of a single instance.
      operationId: lustre.projects.locations.instances.get
    patch:
      parameters:
        - description: Required. Project value
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Required. Location value
          in: path
          name: location
          required: true
          schema:
            type: string
        - description: Required. Instance Name value
          in: path
          name: instance_name
          required: true
          schema:
            type: string
        - description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes since the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: >-
            Optional. Specifies the fields to be overwritten in the instance
            resource by the update. The fields specified in the update_mask are
            relative to the resource, not the full request. A field will be
            overwritten if it is in the mask. If no mask is provided then all
            fields present in the request are overwritten.
          in: query
          name: updateMask
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: Updates the parameters of a single instance.
      operationId: lustre.projects.locations.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
  '/v1/{name}/locations':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: 'The resource that owns the locations collection, if applicable.'
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: >-
            A filter to narrow down results to a preferred subset. The filtering
            language accepts strings like `"displayName=tokyo"`, and is
            documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            The maximum number of results to return. If not set, the service
            selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            A page token received from the `next_page_token` field in the
            response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: Lists information about the supported locations for this service.
      operationId: lustre.projects.locations.list
  '/v1/projects/{project}/locations/{location}/operations':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: Required. Project value
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Required. Location value
          in: path
          name: location
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: lustre.projects.locations.operations.list
  '/v1/projects/{project}/locations/{location}/operations/{operation_id}:cancel':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: Required. Project value
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Required. Location value
          in: path
          name: location
          required: true
          schema:
            type: string
        - description: Required. Operation ID value
          in: path
          name: operation_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: lustre.projects.locations.operations.cancel
  '/v1/projects/{project}/locations/{location}/instances/{instance_name}:exportData':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: Required. Project value
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Required. Location value
          in: path
          name: location
          required: true
          schema:
            type: string
        - description: Required. Instance Name value
          in: path
          name: instance_name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: Exports data from a Managed Lustre instance to Cloud Storage.
      operationId: lustre.projects.locations.instances.exportData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportDataRequest'
  '/v1/projects/{project}/locations/{location}/instances/{instance_name}:importData':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: Required. Project value
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Required. Location value
          in: path
          name: location
          required: true
          schema:
            type: string
        - description: Required. Instance Name value
          in: path
          name: instance_name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: Imports data from Cloud Storage to a Managed Lustre instance.
      operationId: lustre.projects.locations.instances.importData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportDataRequest'
  '/v1/projects/{project}/locations/{location}/instances':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: Required. Project value
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Required. Location value
          in: path
          name: location
          required: true
          schema:
            type: string
        - description: Optional. Filtering results.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Desired order of results.
          in: query
          name: orderBy
          schema:
            type: string
        - description: >-
            Optional. Requested page size. Server might return fewer items than
            requested. If unspecified, the server will pick an appropriate
            default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            Optional. A token identifying a page of results the server should
            return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: Lists instances in a given project and location.
      operationId: lustre.projects.locations.instances.list
    post:
      parameters:
        - description: Required. Project value
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Required. Location value
          in: path
          name: location
          required: true
          schema:
            type: string
        - description: >-
            Required. The name of the Managed Lustre instance. * Must contain
            only lowercase letters, numbers, and hyphens. * Must start with a
            letter. * Must be between 1-63 characters. * Must end with a number
            or a letter.
          in: query
          name: instanceId
          schema:
            type: string
        - description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes since the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: Creates a new instance in a given project and location.
      operationId: lustre.projects.locations.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - '1'
          - '2'
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        default: json
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        default: true
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
  requestBodies:
    Instance:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Instance'
  schemas:
    ExportDataRequest:
      description: Message for exporting data from Lustre.
      properties:
        gcsPath:
          $ref: '#/components/schemas/GcsPath'
          description: Cloud Storage destination.
        lustrePath:
          $ref: '#/components/schemas/LustrePath'
          description: Lustre path source.
        requestId:
          description: Optional. UUID to identify requests.
          type: string
        serviceAccount:
          description: >-
            Optional. User-specified service account used to perform the
            transfer. If unspecified, the Managed Lustre service agent is used.
          type: string
      type: object
    GcsPath:
      description: Cloud Storage as the source of a data transfer.
      properties:
        uri:
          description: 'Required. URI to a Cloud Storage path in the format: `gs://`.'
          type: string
      type: object
    GoogleProtobufEmpty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
      type: object
    ImportDataRequest:
      description: Message for importing data to Lustre.
      properties:
        gcsPath:
          $ref: '#/components/schemas/GcsPath'
          description: >-
            The Cloud Storage source bucket and, optionally, path inside the
            bucket.
        lustrePath:
          $ref: '#/components/schemas/LustrePath'
          description: Lustre path destination.
        requestId:
          description: Optional. UUID to identify requests.
          type: string
        serviceAccount:
          description: >-
            Optional. User-specified service account used to perform the
            transfer. If unspecified, the default Lustre P4 service account will
            be used.
          type: string
      type: object
    Instance:
      description: A Managed Lustre instance.
      properties:
        capacityGib:
          description: >-
            Required. The storage capacity of the instance in gibibytes (GiB).
            Allowed values are from `18000` to `936000`, in increments of 9000.
          format: int64
          type: string
        createTime:
          description: Output only. Timestamp when the instance was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. A user-readable description of the instance.
          type: string
        filesystem:
          description: >-
            Required. Immutable. The filesystem name for this instance. This
            name is used by client-side tools, including when mounting the
            instance. Must be eight characters or less and can only contain
            letters and numbers.
          type: string
        gkeSupportEnabled:
          description: >-
            Optional. Indicates whether you want to enable support for GKE
            clients. By default, GKE clients are not supported.
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: Optional. Labels as key value pairs.
          type: object
        mountPoint:
          description: >-
            Output only. Mount point of the instance in the format
            `IP_ADDRESS@tcp:/FILESYSTEM`.
          readOnly: true
          type: string
        name:
          description: Identifier. The name of the instance.
          type: string
        network:
          description: >-
            Required. Immutable. The full name of the VPC network to which the
            instance is connected. Must be in the format
            `projects/{project_id}/global/networks/{network_name}`.
          type: string
        state:
          description: Output only. The state of the instance.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - UPGRADING
            - REPAIRING
            - STOPPED
          readOnly: true
          type: string
        updateTime:
          description: Output only. Timestamp when the instance was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ListInstancesResponse:
      description: Message for response to listing Instances
      properties:
        instances:
          description: Response from ListInstances.
          items:
            $ref: '#/components/schemas/Instance'
          type: array
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Unordered list. Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
      type: object
    LustrePath:
      description: LustrePath represents a path in the Lustre file system.
      properties:
        path:
          description: >-
            Optional. Root directory path to the Managed Lustre file system,
            starting with `/`. Defaults to `/` if unset.
          type: string
      type: object
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      properties:
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: Represents the metadata of a long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        statusMessage:
          description: 'Output only. Human-readable status of the operation, if any.'
          readOnly: true
          type: string
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes:
            'https://www.googleapis.com/auth/cloud-platform': >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes:
            'https://www.googleapis.com/auth/cloud-platform': >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
      type: oauth2
tags:
  - name: projects
externalDocs:
  url: 'https://cloud.google.com/managed-lustre/'
