openapi: 3.1.0
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: >-
    Store and manage build artifacts in a scalable and integrated service built
    on Google infrastructure.
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Artifact Registry API
  version: v1
servers:
  - url: 'https://artifactregistry.googleapis.com/'
paths:
  '/v1/{+name}':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    delete:
      parameters:
        - description: Required. The name of the attachment to delete.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: >-
            By default, a version that is tagged may not be deleted. If
            force=true, the version and any tags pointing to the version are
            deleted.
          in: query
          name: force
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Deletes an attachment. The returned Operation will finish once the
        attachments has been deleted. It will not have any Operation metadata
        and will return a `google.protobuf.Empty` response.
      operationId: artifactregistry.projects.locations.repositories.attachments.delete
    get:
      parameters:
        - description: Required. The name of the attachment to retrieve.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The view that should be returned in the response.
          in: query
          name: view
          schema:
            enum:
              - VERSION_VIEW_UNSPECIFIED
              - BASIC
              - FULL
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Gets an attachment.
      operationId: artifactregistry.projects.locations.repositories.attachments.get
    patch:
      parameters:
        - description: >-
            The name of the rule, for example:
            `projects/p1/locations/us-central1/repositories/repo1/rules/rule1`.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: >-
            The update mask applies to the resource. For the `FieldMask`
            definition, see
            https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
          in: query
          name: updateMask
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleDevtoolsArtifactregistryV1Rule'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: Updates a rule.
      operationId: artifactregistry.projects.locations.repositories.rules.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleDevtoolsArtifactregistryV1Rule'
  '/v1/{+name}/locations':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: 'The resource that owns the locations collection, if applicable.'
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: >-
            Optional. A list of extra location types that should be used as
            conditions for controlling the visibility of the locations.
          explode: true
          in: query
          name: extraLocationTypes
          schema:
            items:
              type: string
            type: array
        - description: >-
            A filter to narrow down results to a preferred subset. The filtering
            language accepts strings like `"displayName=tokyo"`, and is
            documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            The maximum number of results to return. If not set, the service
            selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            A page token received from the `next_page_token` field in the
            response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Lists information about the supported locations for this service.
      operationId: artifactregistry.projects.locations.list
  '/v1/{+name}:download':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: Required. The name of the file to download.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DownloadFileResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Download a file.
      operationId: artifactregistry.projects.locations.repositories.files.download
  '/v1/{+parent}/aptArtifacts:create':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: >-
            The name of the parent resource where the artifacts will be
            uploaded.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UploadAptArtifactMediaResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Directly uploads an Apt artifact. The returned Operation will complete
        once the resources are uploaded. Package, Version, and File resources
        are created based on the imported artifact. Imported artifacts that
        conflict with existing resources are ignored.
      operationId: artifactregistry.projects.locations.repositories.aptArtifacts.upload
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/UploadAptArtifactRequest'
  '/v1/{+parent}/aptArtifacts:import':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: >-
            The name of the parent resource where the artifacts will be
            imported.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Imports Apt artifacts. The returned Operation will complete once the
        resources are imported. Package, Version, and File resources are created
        based on the imported artifacts. Imported artifacts that conflict with
        existing resources are ignored.
      operationId: artifactregistry.projects.locations.repositories.aptArtifacts.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportAptArtifactsRequest'
  '/v1/{+parent}/attachments':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: >-
            Required. The name of the parent resource whose attachments will be
            listed.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: >-
            Optional. An expression for filtering the results of the request.
            Filter rules are case insensitive. The fields eligible for filtering
            are: * `target` * `type` * `attachment_namespace`
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            The maximum number of attachments to return. Maximum page size is
            1,000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The next_page_token value returned from a previous list request, if
            any.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListAttachmentsResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Lists attachments.
      operationId: artifactregistry.projects.locations.repositories.attachments.list
    post:
      parameters:
        - description: >-
            Required. The name of the parent resource where the attachment will
            be created.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The attachment id to use for this attachment.
          in: query
          name: attachmentId
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Creates an attachment. The returned Operation will finish once the
        attachment has been created. Its response will be the created
        attachment.
      operationId: artifactregistry.projects.locations.repositories.attachments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
  '/v1/{+parent}/dockerImages':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: >-
            Required. The name of the parent resource whose docker images will
            be listed.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The field to order the results by.
          in: query
          name: orderBy
          schema:
            type: string
        - description: >-
            The maximum number of artifacts to return. Maximum page size is
            1,000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The next_page_token value returned from a previous list request, if
            any.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListDockerImagesResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Lists docker images.
      operationId: artifactregistry.projects.locations.repositories.dockerImages.list
  '/v1/{+parent}/files':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: >-
            Required. The name of the repository whose files will be listed. For
            example: "projects/p1/locations/us-central1/repositories/repo1
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: >-
            An expression for filtering the results of the request. Filter rules
            are case insensitive. The fields eligible for filtering are: *
            `name` * `owner` * `annotations` Examples of using a filter: To
            filter the results of your request to files with the name
            `my_file.txt` in project `my-project` in the `us-central` region, in
            repository `my-repo`, append the following filter expression to your
            request: *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/files/my-file.txt"`
            You can also use wildcards to match any number of characters before
            or after the value: *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/files/my-*"`
            *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/files/*file.txt"`
            *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/files/*file*"`
            To filter the results of your request to files owned by the version
            `1.0` in package `pkg1`, append the following filter expression to
            your request: *
            `owner="projects/my-project/locations/us-central1/repositories/my-repo/packages/my-package/versions/1.0"`
            To filter the results of your request to files with the annotation
            key-value pair [`external_link`: `external_link_value`], append the
            following filter expression to your request: *
            `"annotations.external_link:external_link_value"` To filter just for
            a specific annotation key `external_link`, append the following
            filter expression to your request: * `"annotations.external_link"`
            If the annotation key or value contains special characters, you can
            escape them by surrounding the value with backticks. For example, to
            filter the results of your request to files with the annotation
            key-value pair [`external.link`:`https://example.com/my-file`],
            append the following filter expression to your request: * ``
            "annotations.`external.link`:`https://example.com/my-file`" `` You
            can also filter with annotations with a wildcard to match any number
            of characters before or after the value: * ``
            "annotations.*_link:`*example.com*`" ``
          in: query
          name: filter
          schema:
            type: string
        - description: The field to order the results by.
          in: query
          name: orderBy
          schema:
            type: string
        - description: 'The maximum number of files to return. Maximum page size is 1,000.'
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The next_page_token value returned from a previous list request, if
            any.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListFilesResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Lists files.
      operationId: artifactregistry.projects.locations.repositories.files.list
  '/v1/{+parent}/files:upload':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: >-
            Required. The resource name of the repository where the file will be
            uploaded.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UploadFileMediaResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Directly uploads a file to a repository. The returned Operation will
        complete once the resources are uploaded.
      operationId: artifactregistry.projects.locations.repositories.files.upload
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/UploadFileRequest'
  '/v1/{+parent}/genericArtifacts:create':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: >-
            The resource name of the repository where the generic artifact will
            be uploaded.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UploadGenericArtifactMediaResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Directly uploads a Generic artifact. The returned operation will
        complete once the resources are uploaded. Package, version, and file
        resources are created based on the uploaded artifact. Uploaded artifacts
        that conflict with existing resources will raise an `ALREADY_EXISTS`
        error.
      operationId: artifactregistry.projects.locations.repositories.genericArtifacts.upload
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/UploadGenericArtifactRequest'
  '/v1/{+parent}/goModules:create':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: >-
            The resource name of the repository where the Go module will be
            uploaded.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UploadGoModuleMediaResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Directly uploads a Go module. The returned Operation will complete once
        the Go module is uploaded. Package, Version, and File resources are
        created based on the uploaded Go module.
      operationId: artifactregistry.projects.locations.repositories.goModules.upload
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/UploadGoModuleRequest'
  '/v1/{+parent}/googetArtifacts:create':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: >-
            The name of the parent resource where the artifacts will be
            uploaded.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UploadGoogetArtifactMediaResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Directly uploads a GooGet artifact. The returned Operation will complete
        once the resources are uploaded. Package, Version, and File resources
        are created based on the imported artifact. Imported artifacts that
        conflict with existing resources are ignored.
      operationId: artifactregistry.projects.locations.repositories.googetArtifacts.upload
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/UploadGoogetArtifactRequest'
  '/v1/{+parent}/googetArtifacts:import':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: >-
            The name of the parent resource where the artifacts will be
            imported.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Imports GooGet artifacts. The returned Operation will complete once the
        resources are imported. Package, Version, and File resources are created
        based on the imported artifacts. Imported artifacts that conflict with
        existing resources are ignored.
      operationId: artifactregistry.projects.locations.repositories.googetArtifacts.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportGoogetArtifactsRequest'
  '/v1/{+parent}/kfpArtifacts:create':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: >-
            The resource name of the repository where the KFP artifact will be
            uploaded.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UploadKfpArtifactMediaResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Directly uploads a KFP artifact. The returned Operation will complete
        once the resource is uploaded. Package, Version, and File resources will
        be created based on the uploaded artifact. Uploaded artifacts that
        conflict with existing resources will be overwritten.
      operationId: artifactregistry.projects.locations.repositories.kfpArtifacts.upload
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/UploadKfpArtifactRequest'
  '/v1/{+parent}/mavenArtifacts':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: >-
            Required. The name of the parent resource whose maven artifacts will
            be listed.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: >-
            The maximum number of artifacts to return. Maximum page size is
            1,000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The next_page_token value returned from a previous list request, if
            any.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListMavenArtifactsResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Lists maven artifacts.
      operationId: artifactregistry.projects.locations.repositories.mavenArtifacts.list
  '/v1/{+parent}/npmPackages':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: >-
            Required. The name of the parent resource whose npm packages will be
            listed.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: >-
            The maximum number of artifacts to return. Maximum page size is
            1,000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The next_page_token value returned from a previous list request, if
            any.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListNpmPackagesResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Lists npm packages.
      operationId: artifactregistry.projects.locations.repositories.npmPackages.list
  '/v1/{+parent}/packages':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: >-
            Required. The name of the parent resource whose packages will be
            listed.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: >-
            Optional. An expression for filtering the results of the request.
            Filter rules are case insensitive. The fields eligible for filtering
            are: * `name` * `annotations` Examples of using a filter: To filter
            the results of your request to packages with the name `my-package`
            in project `my-project` in the `us-central` region, in repository
            `my-repo`, append the following filter expression to your request: *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/packages/my-package"`
            You can also use wildcards to match any number of characters before
            or after the value: *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/packages/my-*"`
            *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/packages/*package"`
            *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/packages/*pack*"`
            To filter the results of your request to packages with the
            annotation key-value pair [`external_link`: `external_link_value`],
            append the following filter expression to your request": *
            `"annotations.external_link:external_link_value"` To filter the
            results just for a specific annotation key `external_link`, append
            the following filter expression to your request: *
            `"annotations.external_link"` If the annotation key or value
            contains special characters, you can escape them by surrounding the
            value with backticks. For example, to filter the results of your
            request to packages with the annotation key-value pair
            [`external.link`:`https://example.com/my-package`], append the
            following filter expression to your request: * ``
            "annotations.`external.link`:`https://example.com/my-package`" ``
            You can also filter with annotations with a wildcard to match any
            number of characters before or after the value: * ``
            "annotations.*_link:`*example.com*`" ``
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. The field to order the results by.
          in: query
          name: orderBy
          schema:
            type: string
        - description: >-
            The maximum number of packages to return. Maximum page size is
            1,000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The next_page_token value returned from a previous list request, if
            any.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListPackagesResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Lists packages.
      operationId: artifactregistry.projects.locations.repositories.packages.list
  '/v1/{+parent}/pythonPackages':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: >-
            Required. The name of the parent resource whose python packages will
            be listed.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: >-
            The maximum number of artifacts to return. Maximum page size is
            1,000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The next_page_token value returned from a previous list request, if
            any.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListPythonPackagesResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Lists python packages.
      operationId: artifactregistry.projects.locations.repositories.pythonPackages.list
  '/v1/{+parent}/repositories':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: >-
            Required. The name of the parent resource whose repositories will be
            listed.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: >-
            Optional. An expression for filtering the results of the request.
            Filter rules are case insensitive. The fields eligible for filtering
            are: * `name` Examples of using a filter: To filter the results of
            your request to repositories with the name `my-repo` in project
            `my-project` in the `us-central` region, append the following filter
            expression to your request: *
            `name="projects/my-project/locations/us-central1/repositories/my-repo"`
            You can also use wildcards to match any number of characters before
            or after the value: *
            `name="projects/my-project/locations/us-central1/repositories/my-*"`
            *
            `name="projects/my-project/locations/us-central1/repositories/*repo"`
            *
            `name="projects/my-project/locations/us-central1/repositories/*repo*"`
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. The field to order the results by.
          in: query
          name: orderBy
          schema:
            type: string
        - description: >-
            The maximum number of repositories to return. Maximum page size is
            1,000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The next_page_token value returned from a previous list request, if
            any.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListRepositoriesResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Lists repositories.
      operationId: artifactregistry.projects.locations.repositories.list
    post:
      parameters:
        - description: >-
            Required. The name of the parent resource where the repository will
            be created.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The repository id to use for this repository.
          in: query
          name: repositoryId
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Creates a repository. The returned Operation will finish once the
        repository has been created. Its response will be the created
        Repository.
      operationId: artifactregistry.projects.locations.repositories.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
  '/v1/{+parent}/rules':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: >-
            Required. The name of the parent repository whose rules will be
            listed. For example:
            `projects/p1/locations/us-central1/repositories/repo1`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'The maximum number of rules to return. Maximum page size is 1,000.'
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The next_page_token value returned from a previous list request, if
            any.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListRulesResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Lists rules.
      operationId: artifactregistry.projects.locations.repositories.rules.list
    post:
      parameters:
        - description: >-
            Required. The name of the parent resource where the rule will be
            created.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The rule id to use for this repository.
          in: query
          name: ruleId
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleDevtoolsArtifactregistryV1Rule'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: Creates a rule.
      operationId: artifactregistry.projects.locations.repositories.rules.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleDevtoolsArtifactregistryV1Rule'
  '/v1/{+parent}/tags':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: >-
            The name of the parent package whose tags will be listed. For
            example:
            `projects/p1/locations/us-central1/repositories/repo1/packages/pkg1`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: >-
            An expression for filtering the results of the request. Filter rules
            are case insensitive. The fields eligible for filtering are: *
            `name` * `version` Examples of using a filter: To filter the results
            of your request to tags with the name `my-tag` in package
            `my-package` in repository `my-repo` in project "`y-project` in the
            us-central region, append the following filter expression to your
            request: *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/packages/my-package/tags/my-tag"`
            You can also use wildcards to match any number of characters before
            or after the value: *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/packages/my-package/tags/my*"`
            *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/packages/my-package/tags/*tag"`
            *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/packages/my-package/tags/*tag*"`
            To filter the results of your request to tags applied to the version
            `1.0` in package `my-package`, append the following filter
            expression to your request: *
            `version="projects/my-project/locations/us-central1/repositories/my-repo/packages/my-package/versions/1.0"`
          in: query
          name: filter
          schema:
            type: string
        - description: 'The maximum number of tags to return. Maximum page size is 1,000.'
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The next_page_token value returned from a previous list request, if
            any.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Lists tags.
      operationId: artifactregistry.projects.locations.repositories.packages.tags.list
    post:
      parameters:
        - description: The name of the parent resource where the tag will be created.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The tag id to use for this repository.
          in: query
          name: tagId
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tag'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: Creates a tag.
      operationId: artifactregistry.projects.locations.repositories.packages.tags.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
  '/v1/{+parent}/versions':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: The name of the parent resource whose versions will be listed.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: >-
            Optional. An expression for filtering the results of the request.
            Filter rules are case insensitive. The fields eligible for filtering
            are: * `name` * `annotations` Examples of using a filter: To filter
            the results of your request to versions with the name `my-version`
            in project `my-project` in the `us-central` region, in repository
            `my-repo`, append the following filter expression to your request: *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/packages/my-package/versions/my-version"`
            You can also use wildcards to match any number of characters before
            or after the value: *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/packages/my-package/versions/*version"`
            *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/packages/my-package/versions/my*"`
            *
            `name="projects/my-project/locations/us-central1/repositories/my-repo/packages/my-package/versions/*version*"`
            To filter the results of your request to versions with the
            annotation key-value pair [`external_link`: `external_link_value`],
            append the following filter expression to your request: *
            `"annotations.external_link:external_link_value"` To filter just for
            a specific annotation key `external_link`, append the following
            filter expression to your request: * `"annotations.external_link"`
            If the annotation key or value contains special characters, you can
            escape them by surrounding the value with backticks. For example, to
            filter the results of your request to versions with the annotation
            key-value pair [`external.link`:`https://example.com/my-version`],
            append the following filter expression to your request: * ``
            "annotations.`external.link`:`https://example.com/my-version`" ``
            You can also filter with annotations with a wildcard to match any
            number of characters before or after the value: * ``
            "annotations.*_link:`*example.com*`" ``
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. The field to order the results by.
          in: query
          name: orderBy
          schema:
            type: string
        - description: >-
            The maximum number of versions to return. Maximum page size is
            1,000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The next_page_token value returned from a previous list request, if
            any.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The view that should be returned in the response.
          in: query
          name: view
          schema:
            enum:
              - VERSION_VIEW_UNSPECIFIED
              - BASIC
              - FULL
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListVersionsResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Lists versions.
      operationId: artifactregistry.projects.locations.repositories.packages.versions.list
  '/v1/{+parent}/versions:batchDelete':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: The name of the repository holding all requested versions.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Deletes multiple versions across a repository. The returned operation
        will complete once the versions have been deleted.
      operationId: >-
        artifactregistry.projects.locations.repositories.packages.versions.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteVersionsRequest'
  '/v1/{+parent}/yumArtifacts:create':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: >-
            The name of the parent resource where the artifacts will be
            uploaded.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UploadYumArtifactMediaResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Directly uploads a Yum artifact. The returned Operation will complete
        once the resources are uploaded. Package, Version, and File resources
        are created based on the imported artifact. Imported artifacts that
        conflict with existing resources are ignored.
      operationId: artifactregistry.projects.locations.repositories.yumArtifacts.upload
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/UploadYumArtifactRequest'
  '/v1/{+parent}/yumArtifacts:import':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: >-
            The name of the parent resource where the artifacts will be
            imported.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: >-
        Imports Yum (RPM) artifacts. The returned Operation will complete once
        the resources are imported. Package, Version, and File resources are
        created based on the imported artifacts. Imported artifacts that
        conflict with existing resources are ignored.
      operationId: artifactregistry.projects.locations.repositories.yumArtifacts.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportYumArtifactsRequest'
  '/v1/{+resource}:getIamPolicy':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being requested. See
            [Resource
            names](https://cloud.google.com/apis/design/resource_names) for the
            appropriate value for this field.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: >-
            Optional. The maximum policy version that will be used to format the
            policy. Valid values are 0, 1, and 3. Requests specifying an invalid
            value will be rejected. Requests for policies with any conditional
            role bindings must specify version 3. Policies with no conditional
            role bindings may specify any valid value or leave the field unset.
            The policy in the response might use the policy version that you
            specified, or it might use a lower policy version. For example, if
            you specify version 3, but the policy has no conditional role
            bindings, the response uses version 1. To learn which resources
            support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Policy'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Gets the IAM policy for a given resource.
      operationId: artifactregistry.projects.locations.repositories.getIamPolicy
  '/v1/{+resource}:setIamPolicy':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified. See
            [Resource
            names](https://cloud.google.com/apis/design/resource_names) for the
            appropriate value for this field.
          in: path
          name: resource
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Policy'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
      description: Updates the IAM policy for a given resource.
      operationId: artifactregistry.projects.locations.repositories.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
  '/v1/{+resource}:testIamPermissions':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested. See [Resource
            names](https://cloud.google.com/apis/design/resource_names) for the
            appropriate value for this field.
          in: path
          name: resource
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
      description: Tests if the caller has a list of permissions on a resource.
      operationId: artifactregistry.projects.locations.repositories.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - '1'
          - '2'
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        default: json
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        default: true
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
  requestBodies:
    GoogleDevtoolsArtifactregistryV1Rule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GoogleDevtoolsArtifactregistryV1Rule'
  schemas:
    AptArtifact:
      description: >-
        A detailed representation of an Apt artifact. Information in the record
        is derived from the archive's control file. See
        https://www.debian.org/doc/debian-policy/ch-controlfields.html
      properties:
        architecture:
          description: Output only. Operating system architecture of the artifact.
          readOnly: true
          type: string
        component:
          description: Output only. Repository component of the artifact.
          readOnly: true
          type: string
        controlFile:
          description: Output only. Contents of the artifact's control metadata file.
          format: byte
          readOnly: true
          type: string
        name:
          description: Output only. The Artifact Registry resource name of the artifact.
          readOnly: true
          type: string
        packageName:
          description: Output only. The Apt package name of the artifact.
          readOnly: true
          type: string
        packageType:
          description: Output only. An artifact is a binary or source package.
          enum:
            - PACKAGE_TYPE_UNSPECIFIED
            - BINARY
            - SOURCE
          readOnly: true
          type: string
      type: object
    AptRepository:
      description: Configuration for an Apt remote repository.
      properties:
        customRepository:
          $ref: >-
            #/components/schemas/GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryCustomRepository
          description: Customer-specified remote repository.
        publicRepository:
          $ref: >-
            #/components/schemas/GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository
          description: >-
            One of the publicly available Apt repositories supported by Artifact
            Registry.
      type: object
    Attachment:
      description: >-
        An Attachment refers to additional metadata that can be attached to
        artifacts in Artifact Registry. An attachment consists of one or more
        files.
      properties:
        annotations:
          additionalProperties:
            type: string
          description: >-
            Optional. User annotations. These attributes can only be set and
            used by the user, and not by Artifact Registry. See
            https://google.aip.dev/128#annotations for more details such as
            format and size limitations.
          type: object
        attachmentNamespace:
          description: >-
            The namespace this attachment belongs to. E.g. If an attachment is
            created by artifact analysis, namespace is set to
            `artifactanalysis.googleapis.com`.
          type: string
        createTime:
          description: Output only. The time when the attachment was created.
          format: google-datetime
          readOnly: true
          type: string
        files:
          description: >-
            Required. The files that belong to this attachment. If the file ID
            part contains slashes, they are escaped. E.g.
            `projects/p1/locations/us-central1/repositories/repo1/files/sha:`.
          items:
            type: string
          type: array
        name:
          description: >-
            The name of the attachment. E.g.
            `projects/p1/locations/us/repositories/repo/attachments/sbom`.
          type: string
        ociVersionName:
          description: >-
            Output only. The name of the OCI version that this attachment
            created. Only populated for Docker attachments. E.g.
            `projects/p1/locations/us-central1/repositories/repo1/packages/p1/versions/v1`.
          readOnly: true
          type: string
        target:
          description: >-
            Required. The target the attachment is for, can be a Version,
            Package or Repository. E.g.
            `projects/p1/locations/us-central1/repositories/repo1/packages/p1/versions/v1`.
          type: string
        type:
          description: Type of attachment. E.g. `application/vnd.spdx+json`
          type: string
        updateTime:
          description: Output only. The time when the attachment was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    BatchDeleteVersionsMetadata:
      description: The metadata of an LRO from deleting multiple versions.
      properties:
        failedVersions:
          description: The versions the operation failed to delete.
          items:
            type: string
          type: array
      type: object
    BatchDeleteVersionsRequest:
      description: The request to delete multiple versions across a repository.
      properties:
        names:
          description: >-
            Required. The names of the versions to delete. The maximum number of
            versions deleted per batch is determined by the service and is
            dependent on the available resources in the region.
          items:
            type: string
          type: array
        validateOnly:
          description: >-
            If true, the request is performed without deleting data, following
            AIP-163.
          type: boolean
      type: object
    Binding:
      description: 'Associates `members`, or principals, with a `role`.'
      properties:
        condition:
          $ref: '#/components/schemas/Expr'
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          items:
            type: string
          type: array
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
      type: object
    CleanupPolicy:
      description: Artifact policy configuration for repository cleanup policies.
      properties:
        action:
          description: Policy action.
          enum:
            - ACTION_UNSPECIFIED
            - DELETE
            - KEEP
          type: string
        condition:
          $ref: '#/components/schemas/CleanupPolicyCondition'
          description: Policy condition for matching versions.
        id:
          description: The user-provided ID of the cleanup policy.
          type: string
        mostRecentVersions:
          $ref: '#/components/schemas/CleanupPolicyMostRecentVersions'
          description: >-
            Policy condition for retaining a minimum number of versions. May
            only be specified with a Keep action.
      type: object
    CleanupPolicyCondition:
      description: >-
        CleanupPolicyCondition is a set of conditions attached to a
        CleanupPolicy. If multiple entries are set, all must be satisfied for
        the condition to be satisfied.
      properties:
        newerThan:
          description: Match versions newer than a duration.
          format: google-duration
          type: string
        olderThan:
          description: Match versions older than a duration.
          format: google-duration
          type: string
        packageNamePrefixes:
          description: Match versions by package prefix. Applied on any prefix match.
          items:
            type: string
          type: array
        tagPrefixes:
          description: Match versions by tag prefix. Applied on any prefix match.
          items:
            type: string
          type: array
        tagState:
          description: Match versions by tag status.
          enum:
            - TAG_STATE_UNSPECIFIED
            - TAGGED
            - UNTAGGED
            - ANY
          type: string
        versionNamePrefixes:
          description: Match versions by version name prefix. Applied on any prefix match.
          items:
            type: string
          type: array
      type: object
    CleanupPolicyMostRecentVersions:
      description: >-
        CleanupPolicyMostRecentVersions is an alternate condition of a
        CleanupPolicy for retaining a minimum number of versions.
      properties:
        keepCount:
          description: Minimum number of versions to keep.
          format: int32
          type: integer
        packageNamePrefixes:
          description: List of package name prefixes that will apply this rule.
          items:
            type: string
          type: array
      type: object
    CommonRemoteRepository:
      description: Common remote repository settings type.
      properties:
        uri:
          description: Required. A common public repository base for remote repository.
          type: string
      type: object
    DockerImage:
      description: >-
        DockerImage represents a docker artifact. The following fields are
        returned as untyped metadata in the Version resource, using camelcase
        keys (i.e. metadata.imageSizeBytes): * imageSizeBytes * mediaType *
        buildTime
      properties:
        tags:
          description: Tags attached to this image.
          items:
            type: string
          type: array
        buildTime:
          description: >-
            The time this image was built. This field is returned as the
            'metadata.buildTime' field in the Version resource. The build time
            is returned to the client as an RFC 3339 string, which can be easily
            used with the JavaScript Date constructor.
          format: google-datetime
          type: string
        imageSizeBytes:
          description: >-
            Calculated size of the image. This field is returned as the
            'metadata.imageSizeBytes' field in the Version resource.
          format: int64
          type: string
        mediaType:
          description: >-
            Media type of this image, e.g.
            "application/vnd.docker.distribution.manifest.v2+json". This field
            is returned as the 'metadata.mediaType' field in the Version
            resource.
          type: string
        name:
          description: >-
            Required. registry_location, project_id, repository_name and image
            id forms a unique image
            name:`projects//locations//repository//dockerImages/`. For example,
            "projects/test-project/locations/us-west4/repositories/test-repo/dockerImages/
            nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf",
            where "us-west4" is the registry_location, "test-project" is the
            project_id, "test-repo" is the repository_name and
            "nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf"
            is the image's digest.
          type: string
        updateTime:
          description: Output only. The time when the docker image was last updated.
          format: google-datetime
          readOnly: true
          type: string
        uploadTime:
          description: Time the image was uploaded.
          format: google-datetime
          type: string
        uri:
          description: >-
            Required. URL to access the image. Example:
            us-west4-docker.pkg.dev/test-project/test-repo/nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf
          type: string
      type: object
    DockerRepository:
      description: Configuration for a Docker remote repository.
      properties:
        customRepository:
          $ref: >-
            #/components/schemas/GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigDockerRepositoryCustomRepository
          description: Customer-specified remote repository.
        publicRepository:
          description: >-
            One of the publicly available Docker repositories supported by
            Artifact Registry.
          enum:
            - PUBLIC_REPOSITORY_UNSPECIFIED
            - DOCKER_HUB
          type: string
      type: object
    DockerRepositoryConfig:
      description: >-
        DockerRepositoryConfig is docker related repository details. Provides
        additional configuration details for repositories of the docker format
        type.
      properties:
        immutableTags:
          description: >-
            The repository which enabled this flag prevents all tags from being
            modified, moved or deleted. This does not prevent tags from being
            created.
          type: boolean
      type: object
    DownloadFileResponse:
      description: The response to download a file.
      properties: {}
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
      type: object
    Expr:
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      properties:
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
    GenericArtifact:
      description: GenericArtifact represents a generic artifact
      properties:
        createTime:
          description: Output only. The time when the Generic module is created.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: >-
            Resource name of the generic artifact. project, location,
            repository, package_id and version_id create a unique generic
            artifact. i.e.
            "projects/test-project/locations/us-west4/repositories/test-repo/
            genericArtifacts/package_id:version_id"
          type: string
        updateTime:
          description: Output only. The time when the Generic module is updated.
          format: google-datetime
          readOnly: true
          type: string
        version:
          description: The version of the generic artifact.
          type: string
      type: object
    GoModule:
      description: GoModule represents a Go module.
      properties:
        createTime:
          description: Output only. The time when the Go module is created.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: The resource name of a Go module.
          type: string
        updateTime:
          description: Output only. The time when the Go module is updated.
          format: google-datetime
          readOnly: true
          type: string
        version:
          description: >-
            The version of the Go module. Must be a valid canonical version as
            defined in https://go.dev/ref/mod#glos-canonical-version.
          type: string
      type: object
    GoogetArtifact:
      description: A detailed representation of a GooGet artifact.
      properties:
        architecture:
          description: Output only. Operating system architecture of the artifact.
          readOnly: true
          type: string
        name:
          description: Output only. The Artifact Registry resource name of the artifact.
          readOnly: true
          type: string
        packageName:
          description: Output only. The GooGet package name of the artifact.
          readOnly: true
          type: string
      type: object
    GoogleDevtoolsArtifactregistryV1File:
      description: >-
        Files store content that is potentially associated with Packages or
        Versions.
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Optional. Client specified annotations.
          type: object
        createTime:
          description: Output only. The time when the File was created.
          format: google-datetime
          readOnly: true
          type: string
        fetchTime:
          description: >-
            Output only. The time when the last attempt to refresh the file's
            data was made. Only set when the repository is remote.
          format: google-datetime
          readOnly: true
          type: string
        hashes:
          description: The hashes of the file content.
          items:
            $ref: '#/components/schemas/Hash'
          type: array
        name:
          description: >-
            The name of the file, for example:
            `projects/p1/locations/us-central1/repositories/repo1/files/a%2Fb%2Fc.txt`.
            If the file ID part contains slashes, they are escaped.
          type: string
        owner:
          description: 'The name of the Package or Version that owns this file, if any.'
          type: string
        sizeBytes:
          description: The size of the File in bytes.
          format: int64
          type: string
        updateTime:
          description: Output only. The time when the File was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryCustomRepository:
      description: Customer-specified publicly available remote repository.
      properties:
        uri:
          description: >-
            An http/https uri reference to the upstream remote repository, for
            ex: "https://my.apt.registry/".
          type: string
      type: object
    GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository:
      description: >-
        Publicly available Apt repositories constructed from a common repository
        base and a custom repository path.
      properties:
        repositoryBase:
          description: A common public repository base for Apt.
          enum:
            - REPOSITORY_BASE_UNSPECIFIED
            - DEBIAN
            - UBUNTU
            - DEBIAN_SNAPSHOT
          type: string
        repositoryPath:
          description: >-
            A custom field to define a path to a specific repository from the
            base.
          type: string
      type: object
    GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigDockerRepositoryCustomRepository:
      description: Customer-specified publicly available remote repository.
      properties:
        uri:
          description: >-
            An http/https uri reference to the custom remote repository, for ex:
            "https://registry-1.docker.io".
          type: string
      type: object
    GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigMavenRepositoryCustomRepository:
      description: Customer-specified publicly available remote repository.
      properties:
        uri:
          description: >-
            An http/https uri reference to the upstream remote repository, for
            ex: "https://my.maven.registry/".
          type: string
      type: object
    GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigNpmRepositoryCustomRepository:
      description: Customer-specified publicly available remote repository.
      properties:
        uri:
          description: >-
            An http/https uri reference to the upstream remote repository, for
            ex: "https://my.npm.registry/".
          type: string
      type: object
    GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigPythonRepositoryCustomRepository:
      description: Customer-specified publicly available remote repository.
      properties:
        uri:
          description: >-
            An http/https uri reference to the upstream remote repository, for
            ex: "https://my.python.registry/".
          type: string
      type: object
    GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryCustomRepository:
      description: Customer-specified publicly available remote repository.
      properties:
        uri:
          description: >-
            An http/https uri reference to the upstream remote repository, for
            ex: "https://my.yum.registry/".
          type: string
      type: object
    GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository:
      description: >-
        Publicly available Yum repositories constructed from a common repository
        base and a custom repository path.
      properties:
        repositoryBase:
          description: A common public repository base for Yum.
          enum:
            - REPOSITORY_BASE_UNSPECIFIED
            - CENTOS
            - CENTOS_DEBUG
            - CENTOS_VAULT
            - CENTOS_STREAM
            - ROCKY
            - EPEL
          type: string
        repositoryPath:
          description: >-
            A custom field to define a path to a specific repository from the
            base.
          type: string
      type: object
    GoogleDevtoolsArtifactregistryV1Rule:
      description: >-
        A rule defines the deny or allow action of the operation it applies to
        and the conditions required for the rule to apply. You can set one rule
        for an entire repository and one rule for each package within.
      properties:
        action:
          description: The action this rule takes.
          enum:
            - ACTION_UNSPECIFIED
            - ALLOW
            - DENY
          type: string
        condition:
          $ref: '#/components/schemas/Expr'
          description: >-
            Optional. A CEL expression for conditions that must be met in order
            for the rule to apply. If not provided, the rule matches all
            objects.
        name:
          description: >-
            The name of the rule, for example:
            `projects/p1/locations/us-central1/repositories/repo1/rules/rule1`.
          type: string
        operation:
          enum:
            - OPERATION_UNSPECIFIED
            - DOWNLOAD
          type: string
        packageId:
          description: >-
            The package ID the rule applies to. If empty, this rule applies to
            all packages inside the repository.
          type: string
      type: object
    Hash:
      description: A hash of file content.
      properties:
        type:
          description: The algorithm used to compute the hash value.
          enum:
            - HASH_TYPE_UNSPECIFIED
            - SHA256
            - MD5
          type: string
        value:
          description: The hash value.
          format: byte
          type: string
      type: object
    ImportAptArtifactsErrorInfo:
      description: Error information explaining why a package was not imported.
      properties:
        error:
          $ref: '#/components/schemas/Status'
          description: The detailed error status.
        gcsSource:
          $ref: '#/components/schemas/ImportAptArtifactsGcsSource'
          description: Google Cloud Storage location requested.
      type: object
    ImportAptArtifactsGcsSource:
      description: Google Cloud Storage location where the artifacts currently reside.
      properties:
        uris:
          description: 'Cloud Storage paths URI (e.g., gs://my_bucket//my_object).'
          items:
            type: string
          type: array
        useWildcards:
          description: >-
            Supports URI wildcards for matching multiple objects from a single
            URI.
          type: boolean
      type: object
    ImportAptArtifactsMetadata:
      description: The operation metadata for importing artifacts.
      properties: {}
      type: object
    ImportAptArtifactsRequest:
      description: The request to import new apt artifacts.
      properties:
        gcsSource:
          $ref: '#/components/schemas/ImportAptArtifactsGcsSource'
          description: Google Cloud Storage location where input content is located.
      type: object
    ImportAptArtifactsResponse:
      description: The response message from importing APT artifacts.
      properties:
        aptArtifacts:
          description: The Apt artifacts imported.
          items:
            $ref: '#/components/schemas/AptArtifact'
          type: array
        errors:
          description: Detailed error info for packages that were not imported.
          items:
            $ref: '#/components/schemas/ImportAptArtifactsErrorInfo'
          type: array
      type: object
    ImportGoogetArtifactsErrorInfo:
      description: Error information explaining why a package was not imported.
      properties:
        error:
          $ref: '#/components/schemas/Status'
          description: The detailed error status.
        gcsSource:
          $ref: '#/components/schemas/ImportGoogetArtifactsGcsSource'
          description: Google Cloud Storage location requested.
      type: object
    ImportGoogetArtifactsGcsSource:
      description: Google Cloud Storage location where the artifacts currently reside.
      properties:
        uris:
          description: 'Cloud Storage paths URI (e.g., `gs://my_bucket/my_object`).'
          items:
            type: string
          type: array
        useWildcards:
          description: >-
            Supports URI wildcards for matching multiple objects from a single
            URI.
          type: boolean
      type: object
    ImportGoogetArtifactsMetadata:
      description: The operation metadata for importing artifacts.
      properties: {}
      type: object
    ImportGoogetArtifactsRequest:
      description: The request to import new googet artifacts.
      properties:
        gcsSource:
          $ref: '#/components/schemas/ImportGoogetArtifactsGcsSource'
          description: Google Cloud Storage location where input content is located.
      type: object
    ImportGoogetArtifactsResponse:
      description: The response message from importing artifacts.
      properties:
        errors:
          description: Detailed error info for packages that were not imported.
          items:
            $ref: '#/components/schemas/ImportGoogetArtifactsErrorInfo'
          type: array
        googetArtifacts:
          description: The GooGet artifacts updated.
          items:
            $ref: '#/components/schemas/GoogetArtifact'
          type: array
      type: object
    ImportYumArtifactsErrorInfo:
      description: Error information explaining why a package was not imported.
      properties:
        error:
          $ref: '#/components/schemas/Status'
          description: The detailed error status.
        gcsSource:
          $ref: '#/components/schemas/ImportYumArtifactsGcsSource'
          description: Google Cloud Storage location requested.
      type: object
    ImportYumArtifactsGcsSource:
      description: Google Cloud Storage location where the artifacts currently reside.
      properties:
        uris:
          description: 'Cloud Storage paths URI (e.g., gs://my_bucket//my_object).'
          items:
            type: string
          type: array
        useWildcards:
          description: >-
            Supports URI wildcards for matching multiple objects from a single
            URI.
          type: boolean
      type: object
    ImportYumArtifactsMetadata:
      description: The operation metadata for importing artifacts.
      properties: {}
      type: object
    ImportYumArtifactsRequest:
      description: The request to import new yum artifacts.
      properties:
        gcsSource:
          $ref: '#/components/schemas/ImportYumArtifactsGcsSource'
          description: Google Cloud Storage location where input content is located.
      type: object
    ImportYumArtifactsResponse:
      description: The response message from importing YUM artifacts.
      properties:
        errors:
          description: Detailed error info for packages that were not imported.
          items:
            $ref: '#/components/schemas/ImportYumArtifactsErrorInfo'
          type: array
        yumArtifacts:
          description: The yum artifacts imported.
          items:
            $ref: '#/components/schemas/YumArtifact'
          type: array
      type: object
    KfpArtifact:
      description: A detailed representation of a KFP artifact.
      properties:
        name:
          description: >-
            Output only. Resource name of the KFP artifact. Since users don't
            directly interact with this resource, the name will be derived from
            the associated version. For example, when version =
            ".../versions/sha256:abcdef...", the name will be
            ".../kfpArtifacts/sha256:abcdef...".
          readOnly: true
          type: string
        version:
          description: >-
            The version associated with the KFP artifact. Must follow the
            Semantic Versioning standard.
          type: string
      type: object
    ListAttachmentsResponse:
      description: The response from listing attachments.
      properties:
        attachments:
          description: The attachments returned.
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        nextPageToken:
          description: >-
            The token to retrieve the next page of attachments, or empty if
            there are no more attachments to return.
          type: string
      type: object
    ListDockerImagesResponse:
      description: The response from listing docker images.
      properties:
        dockerImages:
          description: The docker images returned.
          items:
            $ref: '#/components/schemas/DockerImage'
          type: array
        nextPageToken:
          description: >-
            The token to retrieve the next page of artifacts, or empty if there
            are no more artifacts to return.
          type: string
      type: object
    ListFilesResponse:
      description: The response from listing files.
      properties:
        files:
          description: The files returned.
          items:
            $ref: '#/components/schemas/GoogleDevtoolsArtifactregistryV1File'
          type: array
        nextPageToken:
          description: >-
            The token to retrieve the next page of files, or empty if there are
            no more files to return.
          type: string
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListMavenArtifactsResponse:
      description: The response from listing maven artifacts.
      properties:
        mavenArtifacts:
          description: The maven artifacts returned.
          items:
            $ref: '#/components/schemas/MavenArtifact'
          type: array
        nextPageToken:
          description: >-
            The token to retrieve the next page of artifacts, or empty if there
            are no more artifacts to return.
          type: string
      type: object
    ListNpmPackagesResponse:
      description: The response from listing npm packages.
      properties:
        nextPageToken:
          description: >-
            The token to retrieve the next page of artifacts, or empty if there
            are no more artifacts to return.
          type: string
        npmPackages:
          description: The npm packages returned.
          items:
            $ref: '#/components/schemas/NpmPackage'
          type: array
      type: object
    ListPackagesResponse:
      description: The response from listing packages.
      properties:
        nextPageToken:
          description: >-
            The token to retrieve the next page of packages, or empty if there
            are no more packages to return.
          type: string
        packages:
          description: The packages returned.
          items:
            $ref: '#/components/schemas/Package'
          type: array
      type: object
    ListPythonPackagesResponse:
      description: The response from listing python packages.
      properties:
        nextPageToken:
          description: >-
            The token to retrieve the next page of artifacts, or empty if there
            are no more artifacts to return.
          type: string
        pythonPackages:
          description: The python packages returned.
          items:
            $ref: '#/components/schemas/PythonPackage'
          type: array
      type: object
    ListRepositoriesResponse:
      description: The response from listing repositories.
      properties:
        nextPageToken:
          description: >-
            The token to retrieve the next page of repositories, or empty if
            there are no more repositories to return.
          type: string
        repositories:
          description: The repositories returned.
          items:
            $ref: '#/components/schemas/Repository'
          type: array
      type: object
    ListRulesResponse:
      description: The response from listing rules.
      properties:
        nextPageToken:
          description: >-
            The token to retrieve the next page of rules, or empty if there are
            no more rules to return.
          type: string
        rules:
          description: The rules returned.
          items:
            $ref: '#/components/schemas/GoogleDevtoolsArtifactregistryV1Rule'
          type: array
      type: object
    ListTagsResponse:
      description: The response from listing tags.
      properties:
        tags:
          description: The tags returned.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        nextPageToken:
          description: >-
            The token to retrieve the next page of tags, or empty if there are
            no more tags to return.
          type: string
      type: object
    ListVersionsResponse:
      description: The response from listing versions.
      properties:
        nextPageToken:
          description: >-
            The token to retrieve the next page of versions, or empty if there
            are no more versions to return.
          type: string
        versions:
          description: The versions returned.
          items:
            $ref: '#/components/schemas/Version'
          type: array
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
      type: object
    MavenArtifact:
      description: MavenArtifact represents a maven artifact.
      properties:
        artifactId:
          description: Artifact ID for the artifact.
          type: string
        createTime:
          description: Output only. Time the artifact was created.
          format: google-datetime
          readOnly: true
          type: string
        groupId:
          description: 'Group ID for the artifact. Example: com.google.guava'
          type: string
        name:
          description: >-
            Required. registry_location, project_id, repository_name and
            maven_artifact forms a unique artifact For example,
            "projects/test-project/locations/us-west4/repositories/test-repo/mavenArtifacts/
            com.google.guava:guava:31.0-jre", where "us-west4" is the
            registry_location, "test-project" is the project_id, "test-repo" is
            the repository_name and "com.google.guava:guava:31.0-jre" is the
            maven artifact.
          type: string
        pomUri:
          description: >-
            Required. URL to access the pom file of the artifact. Example:
            us-west4-maven.pkg.dev/test-project/test-repo/com/google/guava/guava/31.0/guava-31.0.pom
          type: string
        updateTime:
          description: Output only. Time the artifact was updated.
          format: google-datetime
          readOnly: true
          type: string
        version:
          description: Version of this artifact.
          type: string
      type: object
    MavenRepository:
      description: Configuration for a Maven remote repository.
      properties:
        customRepository:
          $ref: >-
            #/components/schemas/GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigMavenRepositoryCustomRepository
          description: Customer-specified remote repository.
        publicRepository:
          description: >-
            One of the publicly available Maven repositories supported by
            Artifact Registry.
          enum:
            - PUBLIC_REPOSITORY_UNSPECIFIED
            - MAVEN_CENTRAL
          type: string
      type: object
    MavenRepositoryConfig:
      description: >-
        MavenRepositoryConfig is maven related repository details. Provides
        additional configuration details for repositories of the maven format
        type.
      properties:
        allowSnapshotOverwrites:
          description: >-
            The repository with this flag will allow publishing the same
            snapshot versions.
          type: boolean
        versionPolicy:
          description: Version policy defines the versions that the registry will accept.
          enum:
            - VERSION_POLICY_UNSPECIFIED
            - RELEASE
            - SNAPSHOT
          type: string
      type: object
    NpmPackage:
      description: NpmPackage represents an npm artifact.
      properties:
        tags:
          description: Tags attached to this package.
          items:
            type: string
          type: array
        createTime:
          description: Output only. Time the package was created.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: >-
            Required. registry_location, project_id, repository_name and
            npm_package forms a unique package For example,
            "projects/test-project/locations/us-west4/repositories/test-repo/npmPackages/
            npm_test:1.0.0", where "us-west4" is the registry_location,
            "test-project" is the project_id, "test-repo" is the repository_name
            and npm_test:1.0.0" is the npm package.
          type: string
        packageName:
          description: Package for the artifact.
          type: string
        updateTime:
          description: Output only. Time the package was updated.
          format: google-datetime
          readOnly: true
          type: string
        version:
          description: Version of this package.
          type: string
      type: object
    NpmRepository:
      description: Configuration for a Npm remote repository.
      properties:
        customRepository:
          $ref: >-
            #/components/schemas/GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigNpmRepositoryCustomRepository
          description: Customer-specified remote repository.
        publicRepository:
          description: >-
            One of the publicly available Npm repositories supported by Artifact
            Registry.
          enum:
            - PUBLIC_REPOSITORY_UNSPECIFIED
            - NPMJS
          type: string
      type: object
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      properties:
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: 'Metadata type for longrunning-operations, currently empty.'
      properties: {}
      type: object
    Package:
      description: Packages are named collections of versions.
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Optional. Client specified annotations.
          type: object
        createTime:
          description: The time when the package was created.
          format: google-datetime
          type: string
        displayName:
          description: The display name of the package.
          type: string
        name:
          description: >-
            The name of the package, for example:
            `projects/p1/locations/us-central1/repositories/repo1/packages/pkg1`.
            If the package ID part contains slashes, the slashes are escaped.
          type: string
        updateTime:
          description: >-
            The time when the package was last updated. This includes publishing
            a new version of the package.
          format: google-datetime
          type: string
      type: object
    Policy:
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      properties:
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          format: byte
          type: string
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          format: int32
          type: integer
      type: object
    ProjectSettings:
      description: The Artifact Registry settings that apply to a Project.
      properties:
        legacyRedirectionState:
          description: The redirection state of the legacy repositories in this project.
          enum:
            - REDIRECTION_STATE_UNSPECIFIED
            - REDIRECTION_FROM_GCR_IO_DISABLED
            - REDIRECTION_FROM_GCR_IO_ENABLED
            - REDIRECTION_FROM_GCR_IO_FINALIZED
            - REDIRECTION_FROM_GCR_IO_ENABLED_AND_COPYING
            - REDIRECTION_FROM_GCR_IO_PARTIAL_AND_COPYING
          enumDeprecated:
            - false
            - false
            - false
            - true
            - false
            - false
          type: string
        name:
          description: >-
            The name of the project's settings. Always of the form:
            projects/{project-id}/projectSettings In update request: never set
            In response: always set
          type: string
        pullPercent:
          description: >-
            The percentage of pull traffic to redirect from GCR to AR when using
            partial redirection.
          format: int32
          type: integer
      type: object
    PythonPackage:
      description: PythonPackage represents a python artifact.
      properties:
        createTime:
          description: Output only. Time the package was created.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: >-
            Required. registry_location, project_id, repository_name and
            python_package forms a unique package
            name:`projects//locations//repository//pythonPackages/`. For
            example,
            "projects/test-project/locations/us-west4/repositories/test-repo/pythonPackages/
            python_package:1.0.0", where "us-west4" is the registry_location,
            "test-project" is the project_id, "test-repo" is the repository_name
            and python_package:1.0.0" is the python package.
          type: string
        packageName:
          description: Package for the artifact.
          type: string
        updateTime:
          description: Output only. Time the package was updated.
          format: google-datetime
          readOnly: true
          type: string
        uri:
          description: >-
            Required. URL to access the package. Example:
            us-west4-python.pkg.dev/test-project/test-repo/python_package/file-name-1.0.0.tar.gz
          type: string
        version:
          description: Version of this package.
          type: string
      type: object
    PythonRepository:
      description: Configuration for a Python remote repository.
      properties:
        customRepository:
          $ref: >-
            #/components/schemas/GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigPythonRepositoryCustomRepository
          description: Customer-specified remote repository.
        publicRepository:
          description: >-
            One of the publicly available Python repositories supported by
            Artifact Registry.
          enum:
            - PUBLIC_REPOSITORY_UNSPECIFIED
            - PYPI
          type: string
      type: object
    RemoteRepositoryConfig:
      description: Remote repository configuration.
      properties:
        aptRepository:
          $ref: '#/components/schemas/AptRepository'
          description: Specific settings for an Apt remote repository.
        commonRepository:
          $ref: '#/components/schemas/CommonRemoteRepository'
          description: >-
            Common remote repository settings. Used as the remote repository
            upstream URL.
        description:
          description: The description of the remote source.
          type: string
        disableUpstreamValidation:
          description: >-
            Input only. A create/update remote repo option to avoid making a
            HEAD/GET request to validate a remote repo and any supplied upstream
            credentials.
          type: boolean
        dockerRepository:
          $ref: '#/components/schemas/DockerRepository'
          description: Specific settings for a Docker remote repository.
        mavenRepository:
          $ref: '#/components/schemas/MavenRepository'
          description: Specific settings for a Maven remote repository.
        npmRepository:
          $ref: '#/components/schemas/NpmRepository'
          description: Specific settings for an Npm remote repository.
        pythonRepository:
          $ref: '#/components/schemas/PythonRepository'
          description: Specific settings for a Python remote repository.
        upstreamCredentials:
          $ref: '#/components/schemas/UpstreamCredentials'
          description: Optional. The credentials used to access the remote repository.
        yumRepository:
          $ref: '#/components/schemas/YumRepository'
          description: Specific settings for a Yum remote repository.
      type: object
    Repository:
      description: A Repository for storing artifacts with a specific format.
      properties:
        cleanupPolicies:
          additionalProperties:
            $ref: '#/components/schemas/CleanupPolicy'
          description: >-
            Optional. Cleanup policies for this repository. Cleanup policies
            indicate when certain package versions can be automatically deleted.
            Map keys are policy IDs supplied by users during policy creation.
            They must unique within a repository and be under 128 characters in
            length.
          type: object
        cleanupPolicyDryRun:
          description: >-
            Optional. If true, the cleanup pipeline is prevented from deleting
            versions in this repository.
          type: boolean
        createTime:
          description: Output only. The time when the repository was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: The user-provided description of the repository.
          type: string
        disallowUnspecifiedMode:
          description: >-
            Optional. If this is true, an unspecified repo type will be treated
            as error rather than defaulting to standard.
          type: boolean
        dockerConfig:
          $ref: '#/components/schemas/DockerRepositoryConfig'
          description: >-
            Docker repository config contains repository level configuration for
            the repositories of docker type.
        format:
          description: Optional. The format of packages that are stored in the repository.
          enum:
            - FORMAT_UNSPECIFIED
            - DOCKER
            - MAVEN
            - NPM
            - APT
            - YUM
            - GOOGET
            - PYTHON
            - KFP
            - GO
            - GENERIC
          type: string
        kmsKeyName:
          description: >-
            The Cloud KMS resource name of the customer managed encryption key
            that's used to encrypt the contents of the Repository. Has the form:
            `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`.
            This value may not be changed after the Repository has been created.
          type: string
        labels:
          additionalProperties:
            type: string
          description: >-
            Labels with user-defined metadata. This field may contain up to 64
            entries. Label keys and values may be no longer than 63 characters.
            Label keys must begin with a lowercase letter and may only contain
            lowercase letters, numeric characters, underscores, and dashes.
          type: object
        mavenConfig:
          $ref: '#/components/schemas/MavenRepositoryConfig'
          description: >-
            Maven repository config contains repository level configuration for
            the repositories of maven type.
        mode:
          description: Optional. The mode of the repository.
          enum:
            - MODE_UNSPECIFIED
            - STANDARD_REPOSITORY
            - VIRTUAL_REPOSITORY
            - REMOTE_REPOSITORY
            - AOSS_REPOSITORY
            - ASSURED_OSS_REPOSITORY
          type: string
        name:
          description: >-
            The name of the repository, for example:
            `projects/p1/locations/us-central1/repositories/repo1`. For each
            location in a project, repository names must be unique.
          type: string
        registryUri:
          description: >-
            Output only. The repository endpoint, for example:
            `us-docker.pkg.dev/my-proj/my-repo`.
          readOnly: true
          type: string
        remoteRepositoryConfig:
          $ref: '#/components/schemas/RemoteRepositoryConfig'
          description: Configuration specific for a Remote Repository.
        satisfiesPzi:
          description: Output only. Whether or not this repository satisfies PZI.
          readOnly: true
          type: boolean
        satisfiesPzs:
          description: Output only. Whether or not this repository satisfies PZS.
          readOnly: true
          type: boolean
        sizeBytes:
          description: >-
            Output only. The size, in bytes, of all artifact storage in this
            repository. Repositories that are generally available or in public
            preview use this to calculate storage costs.
          format: int64
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the repository was last updated.
          format: google-datetime
          readOnly: true
          type: string
        virtualRepositoryConfig:
          $ref: '#/components/schemas/VirtualRepositoryConfig'
          description: Configuration specific for a Virtual Repository.
        vulnerabilityScanningConfig:
          $ref: '#/components/schemas/VulnerabilityScanningConfig'
          description: >-
            Optional. Config and state for vulnerability scanning of resources
            within this Repository.
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    Tag:
      description: >-
        Tags point to a version and represent an alternative name that can be
        used to access the version.
      properties:
        name:
          description: >-
            The name of the tag, for example:
            "projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1".
            If the package part contains slashes, the slashes are escaped. The
            tag part can only have characters in [a-zA-Z0-9\-._~:@], anything
            else must be URL encoded.
          type: string
        version:
          description: >-
            The name of the version the tag refers to, for example:
            `projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/sha256:5243811`
            If the package or version ID parts contain slashes, the slashes are
            escaped.
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
    UploadAptArtifactMediaResponse:
      description: The response to upload an artifact.
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: Operation to be returned to the user.
      type: object
    UploadAptArtifactMetadata:
      description: The operation metadata for uploading artifacts.
      properties: {}
      type: object
    UploadAptArtifactRequest:
      description: The request to upload an artifact.
      properties: {}
      type: object
    UploadAptArtifactResponse:
      description: >-
        The response of the completed artifact upload operation. This response
        is contained in the Operation and available to users.
      properties:
        aptArtifacts:
          description: The Apt artifacts updated.
          items:
            $ref: '#/components/schemas/AptArtifact'
          type: array
      type: object
    UploadFileMediaResponse:
      description: The response to upload a generic artifact.
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: Operation that will be returned to the user.
      type: object
    UploadFileRequest:
      description: The request to upload a file.
      properties:
        fileId:
          description: >-
            Optional. The ID of the file. If left empty will default to sha256
            digest of the content uploaded.
          type: string
      type: object
    UploadGenericArtifactMediaResponse:
      description: The response to upload a generic artifact.
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: Operation that will be returned to the user.
      type: object
    UploadGenericArtifactMetadata:
      description: The operation metadata for uploading generic artifacts.
      properties: {}
      type: object
    UploadGenericArtifactRequest:
      description: >-
        The request to upload a generic artifact. The created GenericArtifact
        will have the resource name
        {parent}/genericArtifacts/package_id:version_id. The created file will
        have the resource name {parent}/files/package_id:version_id:filename.
      properties:
        filename:
          description: >-
            The name of the file of the generic artifact to be uploaded. E.g.
            `example-file.zip` The filename is limited to letters, numbers, and
            url safe characters, i.e. [a-zA-Z0-9-_.~@].
          type: string
        packageId:
          description: >-
            The ID of the package of the generic artifact. If the package does
            not exist, a new package will be created. The `package_id` should
            start and end with a letter or number, only contain letters,
            numbers, hyphens, underscores, and periods, and not exceed 256
            characters.
          type: string
        versionId:
          description: >-
            The ID of the version of the generic artifact. If the version does
            not exist, a new version will be created. The version_id must start
            and end with a letter or number, can only contain lowercase letters,
            numbers, the following characters [-.+~:], i.e.[a-z0-9-.+~:] and
            cannot exceed a total of 128 characters. Creating a version called
            `latest` is not allowed.
          type: string
      type: object
    UploadGoModuleMediaResponse:
      description: The response to upload a Go module.
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: Operation to be returned to the user.
      type: object
    UploadGoModuleMetadata:
      description: The operation metadata for uploading go modules.
      properties: {}
      type: object
    UploadGoModuleRequest:
      description: The request to upload a Go module.
      properties: {}
      type: object
    UploadGoogetArtifactMediaResponse:
      description: The response to upload an artifact.
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: Operation to be returned to the user.
      type: object
    UploadGoogetArtifactMetadata:
      description: The operation metadata for uploading artifacts.
      properties: {}
      type: object
    UploadGoogetArtifactRequest:
      description: The request to upload an artifact.
      properties: {}
      type: object
    UploadGoogetArtifactResponse:
      description: >-
        The response of the completed artifact upload operation. This response
        is contained in the Operation and available to users.
      properties:
        googetArtifacts:
          description: The GooGet artifacts updated.
          items:
            $ref: '#/components/schemas/GoogetArtifact'
          type: array
      type: object
    UploadKfpArtifactMediaResponse:
      description: The response to upload an artifact.
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: Operation that will be returned to the user.
      type: object
    UploadKfpArtifactMetadata:
      description: The operation metadata for uploading KFP artifacts.
      properties: {}
      type: object
    UploadKfpArtifactRequest:
      description: The request to upload an artifact.
      properties:
        tags:
          description: Tags to be created with the version.
          items:
            type: string
          type: array
        description:
          description: Description of the package version.
          type: string
      type: object
    UploadYumArtifactMediaResponse:
      description: The response to upload an artifact.
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: Operation to be returned to the user.
      type: object
    UploadYumArtifactMetadata:
      description: The operation metadata for uploading artifacts.
      properties: {}
      type: object
    UploadYumArtifactRequest:
      description: The request to upload an artifact.
      properties: {}
      type: object
    UploadYumArtifactResponse:
      description: >-
        The response of the completed artifact upload operation. This response
        is contained in the Operation and available to users.
      properties:
        yumArtifacts:
          description: The Yum artifacts updated.
          items:
            $ref: '#/components/schemas/YumArtifact'
          type: array
      type: object
    UpstreamCredentials:
      description: The credentials to access the remote repository.
      properties:
        usernamePasswordCredentials:
          $ref: '#/components/schemas/UsernamePasswordCredentials'
          description: Use username and password to access the remote repository.
      type: object
    UpstreamPolicy:
      description: Artifact policy configuration for the repository contents.
      properties:
        id:
          description: The user-provided ID of the upstream policy.
          type: string
        priority:
          description: >-
            Entries with a greater priority value take precedence in the pull
            order.
          format: int32
          type: integer
        repository:
          description: >-
            A reference to the repository resource, for example:
            `projects/p1/locations/us-central1/repositories/repo1`.
          type: string
      type: object
    UsernamePasswordCredentials:
      description: Username and password credentials.
      properties:
        passwordSecretVersion:
          description: >-
            The Secret Manager key version that holds the password to access the
            remote repository. Must be in the format of
            `projects/{project}/secrets/{secret}/versions/{version}`.
          type: string
        username:
          description: The username to access the remote repository.
          type: string
      type: object
    VPCSCConfig:
      description: The Artifact Registry VPC SC config that apply to a Project.
      properties:
        name:
          description: >-
            The name of the project's VPC SC Config. Always of the form:
            projects/{projectID}/locations/{location}/vpcscConfig In update
            request: never set In response: always set
          type: string
        vpcscPolicy:
          description: >-
            The project per location VPC SC policy that defines the VPC SC
            behavior for the Remote Repository (Allow/Deny).
          enum:
            - VPCSC_POLICY_UNSPECIFIED
            - DENY
            - ALLOW
          type: string
      type: object
    Version:
      description: >-
        The body of a version resource. A version resource represents a
        collection of components, such as files and other data. This may
        correspond to a version in many package management schemes.
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Optional. Client specified annotations.
          type: object
        createTime:
          description: The time when the version was created.
          format: google-datetime
          type: string
        description:
          description: 'Optional. Description of the version, as specified in its metadata.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object.
          description: >-
            Output only. Repository-specific Metadata stored against this
            version. The fields returned are defined by the underlying
            repository-specific resource. Currently, the resources could be:
            DockerImage MavenArtifact
          readOnly: true
          type: object
        name:
          description: >-
            The name of the version, for example:
            `projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/art1`.
            If the package or version ID parts contain slashes, the slashes are
            escaped.
          type: string
        relatedTags:
          description: >-
            Output only. A list of related tags. Will contain up to 100 tags
            that reference this version.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        updateTime:
          description: The time when the version was last updated.
          format: google-datetime
          type: string
      type: object
    VirtualRepositoryConfig:
      description: Virtual repository configuration.
      properties:
        upstreamPolicies:
          description: >-
            Policies that configure the upstream artifacts distributed by the
            Virtual Repository. Upstream policies cannot be set on a standard
            repository.
          items:
            $ref: '#/components/schemas/UpstreamPolicy'
          type: array
      type: object
    VulnerabilityScanningConfig:
      description: >-
        Config on whether to perform vulnerability scanning for resources in
        this repository, as well as output fields describing current state.
      properties:
        enablementConfig:
          description: >-
            Optional. Config for whether this repository has vulnerability
            scanning disabled.
          enum:
            - ENABLEMENT_CONFIG_UNSPECIFIED
            - INHERITED
            - DISABLED
          type: string
        enablementState:
          description: >-
            Output only. State of feature enablement, combining repository
            enablement config and API enablement state.
          enum:
            - ENABLEMENT_STATE_UNSPECIFIED
            - SCANNING_UNSUPPORTED
            - SCANNING_DISABLED
            - SCANNING_ACTIVE
          readOnly: true
          type: string
        enablementStateReason:
          description: Output only. Reason for the repository state.
          readOnly: true
          type: string
        lastEnableTime:
          description: Output only. The last time this repository config was enabled.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    YumArtifact:
      description: A detailed representation of a Yum artifact.
      properties:
        architecture:
          description: Output only. Operating system architecture of the artifact.
          readOnly: true
          type: string
        name:
          description: Output only. The Artifact Registry resource name of the artifact.
          readOnly: true
          type: string
        packageName:
          description: Output only. The yum package name of the artifact.
          readOnly: true
          type: string
        packageType:
          description: Output only. An artifact is a binary or source package.
          enum:
            - PACKAGE_TYPE_UNSPECIFIED
            - BINARY
            - SOURCE
          readOnly: true
          type: string
      type: object
    YumRepository:
      description: Configuration for a Yum remote repository.
      properties:
        customRepository:
          $ref: >-
            #/components/schemas/GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryCustomRepository
          description: Customer-specified remote repository.
        publicRepository:
          $ref: >-
            #/components/schemas/GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository
          description: >-
            One of the publicly available Yum repositories supported by Artifact
            Registry.
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes:
            'https://www.googleapis.com/auth/cloud-platform': >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            'https://www.googleapis.com/auth/cloud-platform.read-only': >-
              View your data across Google Cloud services and see the email
              address of your Google Account
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes:
            'https://www.googleapis.com/auth/cloud-platform': >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            'https://www.googleapis.com/auth/cloud-platform.read-only': >-
              View your data across Google Cloud services and see the email
              address of your Google Account
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
      type: oauth2
tags:
  - name: projects
externalDocs:
  url: 'https://cloud.google.com/artifacts/docs/'
