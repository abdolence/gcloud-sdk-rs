initSidebarItems({"mod":[["commit_request","Nested message and enum types in `CommitRequest`."],["composite_filter","Nested message and enum types in `CompositeFilter`."],["datastore_client","Generated client implementations."],["entity_result","Nested message and enum types in `EntityResult`."],["filter","Nested message and enum types in `Filter`."],["gql_query_parameter","Nested message and enum types in `GqlQueryParameter`."],["key","Nested message and enum types in `Key`."],["mutation","Nested message and enum types in `Mutation`."],["property_filter","Nested message and enum types in `PropertyFilter`."],["property_order","Nested message and enum types in `PropertyOrder`."],["query_result_batch","Nested message and enum types in `QueryResultBatch`."],["read_options","Nested message and enum types in `ReadOptions`."],["run_query_request","Nested message and enum types in `RunQueryRequest`."],["transaction_options","Nested message and enum types in `TransactionOptions`."],["value","Nested message and enum types in `Value`."]],"struct":[["AllocateIdsRequest","The request for [Datastore.AllocateIds][google.datastore.v1beta3.Datastore.AllocateIds]."],["AllocateIdsResponse","The response for [Datastore.AllocateIds][google.datastore.v1beta3.Datastore.AllocateIds]."],["ArrayValue","An array value."],["BeginTransactionRequest","The request for [Datastore.BeginTransaction][google.datastore.v1beta3.Datastore.BeginTransaction]."],["BeginTransactionResponse","The response for [Datastore.BeginTransaction][google.datastore.v1beta3.Datastore.BeginTransaction]."],["CommitRequest","The request for [Datastore.Commit][google.datastore.v1beta3.Datastore.Commit]."],["CommitResponse","The response for [Datastore.Commit][google.datastore.v1beta3.Datastore.Commit]."],["CompositeFilter","A filter that merges multiple other filters using the given operator."],["Entity","A Datastore data object."],["EntityResult","The result of fetching an entity from Datastore."],["Filter","A holder for any type of filter."],["GqlQuery","A GQL query."],["GqlQueryParameter","A binding parameter for a GQL query."],["Key","A unique identifier for an entity. If a keyâ€™s partition ID or any of its path kinds or names are reserved/read-only, the key is reserved/read-only. A reserved/read-only key is forbidden in certain documented contexts."],["KindExpression","A representation of a kind."],["LookupRequest","The request for [Datastore.Lookup][google.datastore.v1beta3.Datastore.Lookup]."],["LookupResponse","The response for [Datastore.Lookup][google.datastore.v1beta3.Datastore.Lookup]."],["Mutation","A mutation to apply to an entity."],["MutationResult","The result of applying a mutation."],["PartitionId","A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty."],["Projection","A representation of a property in a projection."],["PropertyFilter","A filter on a specific property."],["PropertyOrder","The desired order for a specific property."],["PropertyReference","A reference to a property relative to the kind expressions."],["Query","A query for entities."],["QueryResultBatch","A batch of results produced by a query."],["ReadOptions","The options shared by read requests."],["ReserveIdsRequest","The request for [Datastore.ReserveIds][google.datastore.v1beta3.Datastore.ReserveIds]."],["ReserveIdsResponse","The response for [Datastore.ReserveIds][google.datastore.v1beta3.Datastore.ReserveIds]."],["RollbackRequest","The request for [Datastore.Rollback][google.datastore.v1beta3.Datastore.Rollback]."],["RollbackResponse","The response for [Datastore.Rollback][google.datastore.v1beta3.Datastore.Rollback]. (an empty message)."],["RunQueryRequest","The request for [Datastore.RunQuery][google.datastore.v1beta3.Datastore.RunQuery]."],["RunQueryResponse","The response for [Datastore.RunQuery][google.datastore.v1beta3.Datastore.RunQuery]."],["TransactionOptions","Options for beginning a new transaction."],["Value","A message that can hold any of the supported value types and associated metadata."]]});