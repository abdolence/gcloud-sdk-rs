initSidebarItems({"mod":[["authorization_policy","Nested message and enum types in `AuthorizationPolicy`."],["certificate_provider","Nested message and enum types in `CertificateProvider`."],["network_security_client","Generated client implementations."],["server_tls_policy","Nested message and enum types in `ServerTlsPolicy`."],["validation_ca","Nested message and enum types in `ValidationCA`."]],"struct":[["AuthorizationPolicy","AuthorizationPolicy is a resource that specifies how a server should authorize incoming connections. This resource in itself does not change the configuration unless itâ€™s attached to a target https proxy or endpoint config selector resource."],["CertificateProvider","Specification of certificate provider. Defines the mechanism to obtain the certificate and private key for peer to peer authentication."],["CertificateProviderInstance","Specification of a TLS certificate provider instance. Workloads may have one or more CertificateProvider instances (plugins) and one of them is enabled and configured by specifying this message. Workloads use the values from this message to locate and load the CertificateProvider instance configuration."],["ClientTlsPolicy","ClientTlsPolicy is a resource that specifies how a client should authenticate connections to backends of a service. This resource itself does not affect configuration unless it is attached to a backend service resource."],["CreateAuthorizationPolicyRequest","Request used by the CreateAuthorizationPolicy method."],["CreateClientTlsPolicyRequest","Request used by the CreateClientTlsPolicy method."],["CreateServerTlsPolicyRequest","Request used by the CreateServerTlsPolicy method."],["DeleteAuthorizationPolicyRequest","Request used by the DeleteAuthorizationPolicy method."],["DeleteClientTlsPolicyRequest","Request used by the DeleteClientTlsPolicy method."],["DeleteServerTlsPolicyRequest","Request used by the DeleteServerTlsPolicy method."],["GetAuthorizationPolicyRequest","Request used by the GetAuthorizationPolicy method."],["GetClientTlsPolicyRequest","Request used by the GetClientTlsPolicy method."],["GetServerTlsPolicyRequest","Request used by the GetServerTlsPolicy method."],["GrpcEndpoint","Specification of the GRPC Endpoint."],["ListAuthorizationPoliciesRequest","Request used with the ListAuthorizationPolicies method."],["ListAuthorizationPoliciesResponse","Response returned by the ListAuthorizationPolicies method."],["ListClientTlsPoliciesRequest","Request used by the ListClientTlsPolicies method."],["ListClientTlsPoliciesResponse","Response returned by the ListClientTlsPolicies method."],["ListServerTlsPoliciesRequest","Request used by the ListServerTlsPolicies method."],["ListServerTlsPoliciesResponse","Response returned by the ListServerTlsPolicies method."],["OperationMetadata","Represents the metadata of the long-running operation."],["ServerTlsPolicy","ServerTlsPolicy is a resource that specifies how a server should authenticate incoming requests. This resource itself does not affect configuration unless it is attached to a target https proxy or endpoint config selector resource."],["UpdateAuthorizationPolicyRequest","Request used by the UpdateAuthorizationPolicy method."],["UpdateClientTlsPolicyRequest","Request used by UpdateClientTlsPolicy method."],["UpdateServerTlsPolicyRequest","Request used by UpdateServerTlsPolicy method."],["ValidationCa","Specification of ValidationCA. Defines the mechanism to obtain the Certificate Authority certificate to validate the peer certificate."]]});