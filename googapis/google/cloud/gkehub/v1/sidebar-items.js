initSidebarItems({"mod":[["common_feature_spec","Nested message and enum types in `CommonFeatureSpec`."],["feature_resource_state","Nested message and enum types in `FeatureResourceState`."],["feature_state","Nested message and enum types in `FeatureState`."],["gke_hub_client","Generated client implementations."],["membership","Nested message and enum types in `Membership`."],["membership_feature_spec","Nested message and enum types in `MembershipFeatureSpec`."],["membership_feature_state","Nested message and enum types in `MembershipFeatureState`."],["membership_state","Nested message and enum types in `MembershipState`."]],"struct":[["Authority","Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity"],["CommonFeatureSpec","CommonFeatureSpec contains Hub-wide configuration information"],["CommonFeatureState","CommonFeatureState contains Hub-wide Feature status information."],["ConnectAgentResource","ConnectAgentResource represents a Kubernetes resource manifest for Connect Agent deployment."],["CreateFeatureRequest","Request message for the `GkeHub.CreateFeature` method."],["CreateMembershipRequest","Request message for the `GkeHub.CreateMembership` method."],["DeleteFeatureRequest","Request message for `GkeHub.DeleteFeature` method."],["DeleteMembershipRequest","Request message for `GkeHub.DeleteMembership` method."],["Feature","Feature represents the settings and status of any Hub Feature."],["FeatureResourceState","FeatureResourceState describes the state of a Feature resource in the GkeHub API. See `FeatureState` for the “running state” of the Feature in the Hub and across Memberships."],["FeatureState","FeatureState describes the high-level state of a Feature. It may be used to describe a Feature’s state at the environ-level, or per-membershop, depending on the context."],["GenerateConnectManifestRequest","Request message for `GkeHub.GenerateConnectManifest` method. ."],["GenerateConnectManifestResponse","GenerateConnectManifestResponse contains manifest information for installing/upgrading a Connect agent."],["GetFeatureRequest","Request message for `GkeHub.GetFeature` method."],["GetMembershipRequest","Request message for `GkeHub.GetMembership` method."],["GkeCluster","GkeCluster contains information specific to GKE clusters."],["KubernetesMetadata","KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters."],["ListFeaturesRequest","Request message for `GkeHub.ListFeatures` method."],["ListFeaturesResponse","Response message for the `GkeHub.ListFeatures` method."],["ListMembershipsRequest","Request message for `GkeHub.ListMemberships` method."],["ListMembershipsResponse","Response message for the `GkeHub.ListMemberships` method."],["Membership","Membership contains information about a member cluster."],["MembershipEndpoint","MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata."],["MembershipFeatureSpec","MembershipFeatureSpec contains configuration information for a single Membership."],["MembershipFeatureState","MembershipFeatureState contains Feature status information for a single Membership."],["MembershipState","MembershipState describes the state of a Membership resource."],["OperationMetadata","Represents the metadata of the long-running operation."],["TypeMeta","TypeMeta is the type information needed for content unmarshalling of Kubernetes resources in the manifest."],["UpdateFeatureRequest","Request message for `GkeHub.UpdateFeature` method."],["UpdateMembershipRequest","Request message for `GkeHub.UpdateMembership` method."]]});