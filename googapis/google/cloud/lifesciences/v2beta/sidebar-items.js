initSidebarItems({"mod":[["event","Nested message and enum types in `Event`."],["volume","Nested message and enum types in `Volume`."],["workflows_service_v2_beta_client","Generated client implementations."]],"struct":[["Accelerator","Carries information about an accelerator that can be attached to a VM."],["Action","Specifies a single action that runs a Docker container."],["ContainerKilledEvent","An event generated when a container is forcibly terminated by the worker. Currently, this only occurs when the container outlives the timeout specified by the user."],["ContainerStartedEvent","An event generated when a container starts."],["ContainerStoppedEvent","An event generated when a container exits."],["DelayedEvent","An event generated whenever a resource limitation or transient error delays execution of a pipeline that was otherwise ready to run."],["Disk","Carries information about a disk that can be attached to a VM."],["Event","Carries information about events that occur during pipeline execution."],["ExistingDisk","Configuration for an existing disk to be attached to the VM."],["FailedEvent","An event generated when the execution of a pipeline has failed. Note that other events can continue to occur after this event."],["Metadata","Carries information about the pipeline execution that is returned in the long running operation’s metadata field."],["Mount","Carries information about a particular disk mount inside a container."],["Network","VM networking options."],["NfsMount","Configuration for an `NFSMount` to be attached to the VM."],["PersistentDisk","Configuration for a persistent disk to be attached to the VM."],["Pipeline","Specifies a series of actions to execute, expressed as Docker containers."],["PullStartedEvent","An event generated when the worker starts pulling an image."],["PullStoppedEvent","An event generated when the worker stops pulling an image."],["Resources","The system resources for the pipeline run."],["RunPipelineRequest","The arguments to the `RunPipeline` method. The requesting user must have the `iam.serviceAccounts.actAs` permission for the Cloud Life Sciences service account or the request will fail."],["RunPipelineResponse","The response to the RunPipeline method, returned in the operation’s result field on success."],["Secret","Holds encrypted information that is only decrypted and stored in RAM by the worker VM when running the pipeline."],["ServiceAccount","Carries information about a Google Cloud service account."],["UnexpectedExitStatusEvent","An event generated when the execution of a container results in a non-zero exit status that was not otherwise ignored. Execution will continue, but only actions that are flagged as `ALWAYS_RUN` will be executed. Other actions will be skipped."],["VirtualMachine","Carries information about a Compute Engine VM resource."],["Volume","Carries information about storage that can be attached to a VM."],["WorkerAssignedEvent","An event generated after a worker VM has been assigned to run the pipeline."],["WorkerReleasedEvent","An event generated when the worker VM that was assigned to the pipeline has been released (deleted)."]]});