initSidebarItems({"enum":[["DataFrequency","Type of supported data frequency for time series forecasting models."],["DataSplitMethod","Indicates the method to split input data into multiple tables."],["DistanceType","Distance metric used to compute the distance between two points."],["FeedbackType","Indicates the training algorithm to use for matrix factorization models."],["HolidayRegion","Type of supported holiday regions for time series forecasting models."],["LearnRateStrategy","Indicates the learning rate optimization strategy to use."],["LossType","Loss metric to evaluate model training performance."],["ModelType","Indicates the type of the Model."],["OptimizationStrategy","Indicates the optimization strategy used for training."]],"mod":[["arima_forecasting_metrics","Nested message and enum types in `ArimaForecastingMetrics`."],["binary_classification_metrics","Nested message and enum types in `BinaryClassificationMetrics`."],["clustering_metrics","Nested message and enum types in `ClusteringMetrics`."],["evaluation_metrics","Nested message and enum types in `EvaluationMetrics`."],["global_explanation","Nested message and enum types in `GlobalExplanation`."],["kmeans_enums","Nested message and enum types in `KmeansEnums`."],["multi_class_classification_metrics","Nested message and enum types in `MultiClassClassificationMetrics`."],["seasonal_period","Nested message and enum types in `SeasonalPeriod`."],["training_run","Nested message and enum types in `TrainingRun`."]],"struct":[["AggregateClassificationMetrics","Aggregate metrics for classification/classifier models. For multi-class models, the metrics are either macro-averaged or micro-averaged. When macro-averaged, the metrics are calculated for each label and then an unweighted average is taken of those values. When micro-averaged, the metric is calculated globally by counting the total number of correctly predicted rows."],["ArimaFittingMetrics","ARIMA model fitting metrics."],["ArimaForecastingMetrics","Model evaluation metrics for ARIMA forecasting models."],["ArimaOrder","Arima order, can be used for both non-seasonal and seasonal parts."],["BinaryClassificationMetrics","Evaluation metrics for binary classification/classifier models."],["ClusteringMetrics","Evaluation metrics for clustering models."],["DataSplitResult","Data split result. This contains references to the training and evaluation data tables that were used to train the model."],["EvaluationMetrics","Evaluation metrics of a model. These are either computed on all training data or just the eval data based on whether eval data was used during training. These are not present for imported models."],["GlobalExplanation","Global explanations containing the top most important features after training."],["KmeansEnums",""],["MultiClassClassificationMetrics","Evaluation metrics for multi-class classification/classifier models."],["RankingMetrics","Evaluation metrics used by weighted-ALS models specified by feedback_type=implicit."],["RegressionMetrics","Evaluation metrics for regression and explicit feedback type matrix factorization models."],["SeasonalPeriod",""],["TrainingRun","Information about a single training query run for the model."]]});