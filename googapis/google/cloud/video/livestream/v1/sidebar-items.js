initSidebarItems({"mod":[["audio_stream","Nested message and enum types in `AudioStream`."],["channel","Nested message and enum types in `Channel`."],["elementary_stream","Nested message and enum types in `ElementaryStream`."],["event","Nested message and enum types in `Event`."],["input","Nested message and enum types in `Input`."],["input_attachment","Nested message and enum types in `InputAttachment`."],["livestream_service_client","Generated client implementations."],["manifest","Nested message and enum types in `Manifest`."],["preprocessing_config","Nested message and enum types in `PreprocessingConfig`."],["video_stream","Nested message and enum types in `VideoStream`."]],"struct":[["AudioStream","Audio stream resource."],["Channel","Channel resource represents the processor that does a user-defined “streaming” operation, which includes getting an input stream through an input, transcoding it to multiple renditions, and publishing output live streams in certain formats (for example, HLS or DASH) to the specified location."],["ChannelOperationResponse","Response message for Start/Stop Channel long-running operations."],["CreateChannelRequest","Request message for “LivestreamService.CreateChannel”."],["CreateEventRequest","Request message for “LivestreamService.CreateEvent”."],["CreateInputRequest","Request message for “LivestreamService.CreateInput”."],["DeleteChannelRequest","Request message for “LivestreamService.DeleteChannel”."],["DeleteEventRequest","Request message for “LivestreamService.DeleteEvent”."],["DeleteInputRequest","Request message for “LivestreamService.DeleteInput”."],["ElementaryStream","Encoding of an input element such as an audio, video, or text track. Elementary streams must be packaged before mapping and sharing between different output formats."],["Event","Event is a sub-resource of a channel, which can be scheduled by the user to execute operations on a channel resource without having to stop the channel."],["GetChannelRequest","Request message for “LivestreamService.GetChannel”."],["GetEventRequest","Request message for “LivestreamService.GetEvent”."],["GetInputRequest","Request message for “LivestreamService.GetInput”."],["Input","Input resource represents the endpoint from which the channel ingests the input stream."],["InputAttachment","A group of information for attaching an input resource to this channel."],["ListChannelsRequest","Request message for “LivestreamService.ListChannels”."],["ListChannelsResponse","Response message for “LivestreamService.ListChannels”."],["ListEventsRequest","Request message for “LivestreamService.ListEvents”."],["ListEventsResponse","Response message for “LivestreamService.ListEvents”."],["ListInputsRequest","Request message for “LivestreamService.ListInputs”."],["ListInputsResponse","Response message for “LivestreamService.ListInputs”."],["Manifest","Manifest configuration."],["MuxStream","Multiplexing settings for output stream."],["OperationMetadata","Represents the metadata of the long-running operation."],["PreprocessingConfig","Preprocessing configurations."],["SegmentSettings","Segment settings for `fmp4` and `ts`."],["SpriteSheet","Sprite sheet configuration."],["StartChannelRequest","Request message for “LivestreamService.StartChannel”."],["StopChannelRequest","Request message for “LivestreamService.StopChannel”."],["TextStream","Encoding of a text stream. For example, closed captions or subtitles."],["UpdateChannelRequest","Request message for “LivestreamService.UpdateChannel”."],["UpdateInputRequest","Request message for “LivestreamService.UpdateInput”."],["VideoStream","Video stream resource."]]});