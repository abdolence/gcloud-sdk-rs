initSidebarItems({"enum":[["DeviceForm","Whether the device is physical or virtual."],["DeviceFormFactor","The form factor of a device."],["InvalidMatrixDetails","The detailed reason that a Matrix was deemed INVALID."],["OrchestratorOption","Specifies how to execute the test."],["OutcomeSummary","Outcome summary for a finished test matrix."],["RoboActionType","Actions which Robo can perform on UI elements."],["TestState","The state (i.e., progress) of a test execution or matrix."]],"mod":[["account","Nested message and enum types in `Account`."],["android_instrumentation_test","Nested message and enum types in `AndroidInstrumentationTest`."],["android_robo_test","Nested message and enum types in `AndroidRoboTest`."],["android_test_loop","Nested message and enum types in `AndroidTestLoop`."],["app_bundle","Nested message and enum types in `AppBundle`."],["application_detail_service_client","Generated client implementations."],["device_file","Nested message and enum types in `DeviceFile`."],["environment","Nested message and enum types in `Environment`."],["environment_matrix","Nested message and enum types in `EnvironmentMatrix`."],["file_reference","Nested message and enum types in `FileReference`."],["get_test_environment_catalog_request","Nested message and enum types in `GetTestEnvironmentCatalogRequest`."],["invalid_request_detail","Nested message and enum types in `InvalidRequestDetail`."],["robo_starting_intent","Nested message and enum types in `RoboStartingIntent`."],["sharding_option","Nested message and enum types in `ShardingOption`."],["test_environment_catalog","Nested message and enum types in `TestEnvironmentCatalog`."],["test_environment_discovery_service_client","Generated client implementations."],["test_execution_service_client","Generated client implementations."],["test_specification","Nested message and enum types in `TestSpecification`."]],"struct":[["Account","Identifies an account and how to log into it."],["AndroidDevice","A single Android device."],["AndroidDeviceCatalog","The currently supported Android devices."],["AndroidDeviceList","A list of Android device configurations in which the test is to be executed."],["AndroidInstrumentationTest","A test of an Android application that can control an Android component independently of its normal lifecycle. Android instrumentation tests run an application APK and test APK inside the same process on a virtual or physical AndroidDevice.  They also specify a test runner class, such as com.google.GoogleTestRunner, which can vary on the specific instrumentation framework chosen."],["AndroidMatrix","A set of Android device configuration permutations is defined by the the cross-product of the given axes. Internally, the given AndroidMatrix will be expanded into a set of AndroidDevices."],["AndroidModel","A description of an Android device tests may be run on."],["AndroidRoboTest","A test of an android application that explores the application on a virtual or physical Android Device, finding culprits and crashes as it goes. Next tag: 30"],["AndroidRuntimeConfiguration","Android configuration that can be selected at the time a test is run."],["AndroidTestLoop","A test of an Android Application with a Test Loop. The intent <intent-name> will be implicitly added, since Games is the only user of this api, for the time being."],["AndroidVersion","A version of the Android OS."],["Apk","An Android package file to install."],["ApkDetail","Android application details based on application manifest and apk archive contents."],["ApkManifest","An Android app manifest. See http://developer.android.com/guide/topics/manifest/manifest-intro.html"],["AppBundle","An Android App Bundle file format, containing a BundleConfig.pb file, a base module directory, zero or more dynamic feature module directories."],["CancelTestMatrixRequest","Request to stop running all of the tests in the specified matrix."],["CancelTestMatrixResponse","Response containing the current state of the specified test matrix."],["ClientInfo","Information about the client which invoked the test."],["ClientInfoDetail","Key-value pair of detailed information about the client which invoked the test. Examples: {‘Version’, ‘1.0’}, {‘Release Track’, ‘BETA’}."],["CreateTestMatrixRequest","Request to submit a matrix of tests for execution."],["DeviceFile","A single device file description."],["DeviceIpBlock","A single device IP block"],["DeviceIpBlockCatalog","List of IP blocks used by the Firebase Test Lab"],["Distribution","Data about the relative number of devices running a given configuration of the Android platform."],["Environment","The environment in which the test is run."],["EnvironmentMatrix","The matrix of environments in which the test is to be executed."],["EnvironmentVariable","A key-value pair passed as an environment variable to the test."],["FileReference","A reference to a file, used for user inputs."],["GetApkDetailsRequest","A request to get the details of an Android application APK."],["GetApkDetailsResponse","Response containing the details of the specified Android application APK."],["GetTestEnvironmentCatalogRequest","Request to list the currently supported values for an environment type."],["GetTestMatrixRequest","Request to get the Test Matrix with the given id."],["GoogleAuto","Enables automatic Google account login. If set, the service automatically generates a Google test account and adds it to the device, before executing the test. Note that test accounts might be reused. Many applications show their full set of functionalities when an account is present on the device. Logging into the device with these generated accounts allows testing more functionalities."],["GoogleCloudStorage","A storage location within Google cloud storage (GCS)."],["IntentFilter","The  section of an  tag. https://developer.android.com/guide/topics/manifest/intent-filter-element.html"],["InvalidRequestDetail","Details behind an invalid request."],["IosDevice","A single iOS device."],["IosDeviceCatalog","The currently supported iOS devices."],["IosDeviceFile","A file or directory to install on the device before the test starts."],["IosDeviceList","A list of iOS device configurations in which the test is to be executed."],["IosModel","A description of an iOS device tests may be run on."],["IosRuntimeConfiguration","iOS configuration that can be selected at the time a test is run."],["IosTestLoop","A test of an iOS application that implements one or more game loop scenarios. This test type accepts an archived application (.ipa file) and a list of integer scenarios that will be executed on the app sequentially."],["IosTestSetup","A description of how to set up an iOS device prior to running the test."],["IosVersion","An iOS version."],["IosXcTest","A test of an iOS application that uses the XCTest framework. Xcode supports the option to “build for testing”, which generates an .xctestrun file that contains a test specification (arguments, test methods, etc). This test type accepts a zip file containing the .xctestrun file and the corresponding contents of the Build/Products directory that contains all the binaries needed to run the tests."],["LauncherActivityIntent","Specifies an intent that starts the main launcher activity."],["Locale","A location/region designation for language."],["ManualSharding","Shards test cases into the specified groups of packages, classes, and/or methods."],["NetworkConfiguration",""],["NetworkConfigurationCatalog",""],["ObbFile","An opaque binary blob file to install on the device before the test starts."],["Orientation","Screen orientation of the device."],["ProvidedSoftwareCatalog","The currently provided software environment on the devices under test."],["RegularFile","A file or directory to install on the device before the test starts."],["ResultStorage","Locations where the results of running the test are stored."],["RoboDirective","Directs Robo to interact with a specific UI element if it is encountered during the crawl. Currently, Robo can perform text entry or element click."],["RoboStartingIntent","Message for specifying the start activities to crawl."],["Shard","Output only. Details about the shard."],["ShardingOption","Options for enabling sharding."],["StartActivityIntent","A starting intent specified by an action, uri, and categories."],["SystraceSetup",""],["TestDetails","Additional details about the progress of the running test."],["TestEnvironmentCatalog","A description of a test environment."],["TestExecution","A single test executed in a single environment."],["TestMatrix","TestMatrix captures all details about a test. It contains the environment configuration, test specification, test executions and overall state and outcome."],["TestSetup","A description of how to set up the Android device prior to running the test."],["TestSpecification","A description of how to run the test."],["TestTargetsForShard","Test targets for a shard."],["ToolResultsExecution","Represents a tool results execution resource."],["ToolResultsHistory","Represents a tool results history resource."],["ToolResultsStep","Represents a tool results step resource."],["TrafficRule","Network emulation parameters."],["UniformSharding","Uniformly shards test cases given a total number of shards."],["XcodeVersion","An Xcode version that an iOS version is compatible with."]]});