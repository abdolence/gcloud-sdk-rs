initSidebarItems({"enum":[["AuthFailAction","Actions to take when the user is not logged in."],["AuthorizedCertificateView","Fields that should be returned when an AuthorizedCertificate resource is retrieved."],["DomainOverrideStrategy","Override strategy for mutating an existing mapping."],["InboundServiceType","Available inbound services."],["LoginRequirement","Methods to restrict access to a URL based on login status."],["ManagementStatus","State of certificate management. Refers to the most recent certificate acquisition or renewal attempt."],["SecurityLevel","Methods to enforce security (HTTPS) on a URL."],["ServingStatus","Run states of a version."],["VersionView","Fields that should be returned when [Version][google.appengine.v1.Version] resources are retrieved."]],"mod":[["application","Nested message and enum types in `Application`."],["applications_client","Generated client implementations."],["audit_data","Nested message and enum types in `AuditData`."],["authorized_certificates_client","Generated client implementations."],["authorized_domains_client","Generated client implementations."],["domain_mappings_client","Generated client implementations."],["endpoints_api_service","Nested message and enum types in `EndpointsApiService`."],["entrypoint","Nested message and enum types in `Entrypoint`."],["error_handler","Nested message and enum types in `ErrorHandler`."],["firewall_client","Generated client implementations."],["firewall_rule","Nested message and enum types in `FirewallRule`."],["instance","Nested message and enum types in `Instance`."],["instances_client","Generated client implementations."],["network_settings","Nested message and enum types in `NetworkSettings`."],["operation_metadata_v1","Nested message and enum types in `OperationMetadataV1`."],["resource_record","Nested message and enum types in `ResourceRecord`."],["services_client","Generated client implementations."],["ssl_settings","Nested message and enum types in `SslSettings`."],["traffic_split","Nested message and enum types in `TrafficSplit`."],["url_map","Nested message and enum types in `UrlMap`."],["version","Nested message and enum types in `Version`."],["versions_client","Generated client implementations."]],"struct":[["ApiConfigHandler","Google Cloud Endpoints configuration for API handlers."],["ApiEndpointHandler","Uses Google Cloud Endpoints to handle requests."],["Application","An Application resource contains the top-level configuration of an App Engine application."],["AuditData","App Engine admin service audit log."],["AuthorizedCertificate","An SSL certificate that a user has been authorized to administer. A user is authorized to administer any certificate that applies to one of their authorized domains."],["AuthorizedDomain","A domain that a user has been authorized to administer. To authorize use of a domain, verify ownership via Webmaster Central."],["AutomaticScaling","Automatic scaling is based on request rate, response latencies, and other application metrics."],["BasicScaling","A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity."],["BatchUpdateIngressRulesRequest","Request message for `Firewall.BatchUpdateIngressRules`."],["BatchUpdateIngressRulesResponse","Response message for `Firewall.UpdateAllIngressRules`."],["CertificateRawData","An SSL certificate obtained from a certificate authority."],["CloudBuildOptions","Options for the build operations performed as a part of the version deployment. Only applicable for App Engine flexible environment when creating a version using source code directly."],["ContainerInfo","Docker image that is used to create a container and start a VM instance for the version that you deploy. Only applicable for instances running in the App Engine flexible environment."],["CpuUtilization","Target scaling by CPU usage."],["CreateApplicationRequest","Request message for `Applications.CreateApplication`."],["CreateAuthorizedCertificateRequest","Request message for `AuthorizedCertificates.CreateAuthorizedCertificate`."],["CreateDomainMappingRequest","Request message for `DomainMappings.CreateDomainMapping`."],["CreateIngressRuleRequest","Request message for `Firewall.CreateIngressRule`."],["CreateVersionMetadataV1","Metadata for the given [google.longrunning.Operation][google.longrunning.Operation] during a [google.appengine.v1.CreateVersionRequest][google.appengine.v1.CreateVersionRequest]."],["CreateVersionMethod","Detailed information about CreateVersion call."],["CreateVersionRequest","Request message for `Versions.CreateVersion`."],["DebugInstanceRequest","Request message for `Instances.DebugInstance`."],["DeleteAuthorizedCertificateRequest","Request message for `AuthorizedCertificates.DeleteAuthorizedCertificate`."],["DeleteDomainMappingRequest","Request message for `DomainMappings.DeleteDomainMapping`."],["DeleteIngressRuleRequest","Request message for `Firewall.DeleteIngressRule`."],["DeleteInstanceRequest","Request message for `Instances.DeleteInstance`."],["DeleteServiceRequest","Request message for `Services.DeleteService`."],["DeleteVersionRequest","Request message for `Versions.DeleteVersion`."],["Deployment","Code and application artifacts used to deploy a version to App Engine."],["DiskUtilization","Target scaling by disk usage. Only applicable in the App Engine flexible environment."],["DomainMapping","A domain serving an App Engine application."],["EndpointsApiService","Cloud Endpoints configuration. The Endpoints API Service provides tooling for serving Open API and gRPC endpoints via an NGINX proxy. Only valid for App Engine Flexible environment deployments."],["Entrypoint","The entrypoint for the application."],["ErrorHandler","Custom static error page to be served when an error occurs."],["FileInfo","Single source file that is part of the version to be deployed. Each source file that is deployed must be specified separately."],["FirewallRule","A single firewall rule that is evaluated against incoming traffic and provides an action to take on matched requests."],["GetApplicationRequest","Request message for `Applications.GetApplication`."],["GetAuthorizedCertificateRequest","Request message for `AuthorizedCertificates.GetAuthorizedCertificate`."],["GetDomainMappingRequest","Request message for `DomainMappings.GetDomainMapping`."],["GetIngressRuleRequest","Request message for `Firewall.GetIngressRule`."],["GetInstanceRequest","Request message for `Instances.GetInstance`."],["GetServiceRequest","Request message for `Services.GetService`."],["GetVersionRequest","Request message for `Versions.GetVersion`."],["HealthCheck","Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances. Only applicable for instances in App Engine flexible environment."],["Instance","An Instance resource is the computing unit that App Engine uses to automatically scale an application."],["Library","Third-party Python runtime library that is required by the application."],["ListAuthorizedCertificatesRequest","Request message for `AuthorizedCertificates.ListAuthorizedCertificates`."],["ListAuthorizedCertificatesResponse","Response message for `AuthorizedCertificates.ListAuthorizedCertificates`."],["ListAuthorizedDomainsRequest","Request message for `AuthorizedDomains.ListAuthorizedDomains`."],["ListAuthorizedDomainsResponse","Response message for `AuthorizedDomains.ListAuthorizedDomains`."],["ListDomainMappingsRequest","Request message for `DomainMappings.ListDomainMappings`."],["ListDomainMappingsResponse","Response message for `DomainMappings.ListDomainMappings`."],["ListIngressRulesRequest","Request message for `Firewall.ListIngressRules`."],["ListIngressRulesResponse","Response message for `Firewall.ListIngressRules`."],["ListInstancesRequest","Request message for `Instances.ListInstances`."],["ListInstancesResponse","Response message for `Instances.ListInstances`."],["ListServicesRequest","Request message for `Services.ListServices`."],["ListServicesResponse","Response message for `Services.ListServices`."],["ListVersionsRequest","Request message for `Versions.ListVersions`."],["ListVersionsResponse","Response message for `Versions.ListVersions`."],["LivenessCheck","Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances."],["LocationMetadata","Metadata for the given [google.cloud.location.Location][google.cloud.location.Location]."],["ManagedCertificate","A certificate managed by App Engine."],["ManualScaling","A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time."],["Network","Extra network settings. Only applicable in the App Engine flexible environment."],["NetworkSettings","A NetworkSettings resource is a container for ingress settings for a version or service."],["NetworkUtilization","Target scaling by network usage. Only applicable in the App Engine flexible environment."],["OperationMetadataV1","Metadata for the given [google.longrunning.Operation][google.longrunning.Operation]."],["ReadinessCheck","Readiness checking configuration for VM instances. Unhealthy instances are removed from traffic rotation."],["RepairApplicationRequest","Request message for ‘Applications.RepairApplication’."],["RequestUtilization","Target scaling by request utilization. Only applicable in the App Engine flexible environment."],["ResourceRecord","A DNS resource record."],["Resources","Machine resources for a version."],["ScriptHandler","Executes a script to handle the request that matches the URL pattern."],["Service","A Service resource is a logical component of an application that can share state and communicate in a secure fashion with other services. For example, an application that handles customer requests might include separate services to handle tasks such as backend data analysis or API requests from mobile devices. Each service has a collection of versions that define a specific set of code used to implement the functionality of that service."],["SslSettings","SSL configuration for a `DomainMapping` resource."],["StandardSchedulerSettings","Scheduler settings for standard environment."],["StaticFilesHandler","Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files. Static file handlers describe which files in the application directory are static files, and which URLs serve them."],["TrafficSplit","Traffic routing configuration for versions within a single service. Traffic splits define how traffic directed to the service is assigned to versions."],["UpdateApplicationRequest","Request message for `Applications.UpdateApplication`."],["UpdateAuthorizedCertificateRequest","Request message for `AuthorizedCertificates.UpdateAuthorizedCertificate`."],["UpdateDomainMappingRequest","Request message for `DomainMappings.UpdateDomainMapping`."],["UpdateIngressRuleRequest","Request message for `Firewall.UpdateIngressRule`."],["UpdateServiceMethod","Detailed information about UpdateService call."],["UpdateServiceRequest","Request message for `Services.UpdateService`."],["UpdateVersionRequest","Request message for `Versions.UpdateVersion`."],["UrlDispatchRule","Rules to match an HTTP request and dispatch that request to a service."],["UrlMap","URL pattern and description of how the URL should be handled. App Engine can handle URLs by executing application code or by serving static files uploaded with the version, such as images, CSS, or JavaScript."],["Version","A Version resource is a specific set of source code and configuration files that are deployed into a service."],["Volume","Volumes mounted within the app container. Only applicable in the App Engine flexible environment."],["VpcAccessConnector","VPC access connector specification."],["ZipInfo","The zip file information for a zip deployment."]]});